/*
 * OmniVision OV5640 sensor driver
 *
 * Copyright (C) 2011 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or
 *modify it under the terms of the GNU General Public License as
 *published by the Free Software Foundation version 2.
 *
 * This program is distributed "as is" WITHOUT ANY WARRANTY of any
 *kind, whether express or implied; without even the implied warranty
 *of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

#ifndef __OV5640_H__
#define __OV5640_H__

#define ENABLE_COLOR_PATTERN 0

#define OV5640_SATURATION_MIN			0
#define OV5640_SATURATION_MAX			200
#define OV5640_SATURATION_STEP          100
#define OV5640_SATURATION_DEF			100

#define OV5640_SHARPNESS_MIN			0
#define OV5640_SHARPNESS_MAX			200
#define OV5640_SHARPNESS_STEP           100
#define OV5640_SHARPNESS_DEF			100

/* Auto Focus Command */
#define OV5640_CMD_MAIN					0x3022
#define OV5640_CMD_ACK					0x3023
#define OV5640_CMD_FW_STATUS				0x3029
/*  Auto Focus Status */
#define OV5640_AF_NORMALIZED_W				80
#define OV5640_AF_NORMALIZED_H				60
#define OV5640_AF_SUCCESS				0
#define OV5640_AF_PENDING				1
#define OV5640_AF_FAIL					2

#define OV5640_NOT_FOCUSING				0
#define OV5640_FOCUSING					1

#define OV5640_MAX_FOCUS_AREAS				5
/**
 *struct ov5640_reg - ov5640 register format
 *@reg: 16-bit offset to register
 *@val: 8/16/32-bit register value
 *@length: length of the register
 *
 * Define a structure for OV5640 register initialization values
 */
struct ov5640_reg {
	u16 reg;
	u8 val;
};

/**
* Define a structure for OV5640 AF zone scale values
 */
struct ov5640_af_zone_scale {
	u32 x_scale;
	u32 y_scale;
};

/* TODO: Divide this properly */
static const struct ov5640_reg configscript_common1[] = {
	/* System Control */
	{0x3103, 0x11},
	{0x3008, 0x82},		/* Reset [7] PowerDn [6] */
	{0xFFFF, 3},		/* Sleep 3ms */
	{0x3008, 0x42},
	{0x3103, 0x03},		/* PLL Clock Select */

	/* IO Config */
	{0x3017, 0x00},		/* IO [3:0] D9-D6 (MIPI MD1-D9:D8 MC-D7:D6) */
	{0x3018, 0x00},		/* IO [7:2] D5-D0 (MIPI MD0-D5:D4)
				   [1]GPIO1 [0]GPIO0 (MIPI MD2/MC/MD1) */

	/* MIPI Control */
	{0x4800, 0x04},
	{0x3034, 0x18},
	{0x300e, 0x45},		/* MIPI Control  Dual Lane */
	/* CLKS = Src=13Mhz:  676Mbps 8-bit */
	{0x3037, 0x12},		/* PLL Pre-Div [0:3], /2=6.5Mhz
						   PLL Root Div [4] /1=676Mhz */
	{0x3036, 0x68},		/* PLL Mult 4~252 0:7  0x68=104=676Mhz */
	/* PLL ADCLK */
	{0x303d, 0x20},		/*PreDivSp [5:4] /2=6.5Mhz */
	{0x303b, 0x1E},		/*DivCntsb [4:0] *30=195Mhz */
	/*???? */
	{0x302e, 0x08},		/*undocumented */
	/*Format control */
	{0x501f, 0x00},		/*ISP Format */
	/*JPG Control */
	{0x4713, 0x02},		/*JPG Mode Select */
	/*JPG Quality? */
	{0x4407, 0x04},
	{0x440e, 0x00},
	/*VFIFO Control */
	{0x460b, 0x35},		/*???? */
	{0x460c, 0x22},		/*PCLK Divider Manual */
	/*???? */
	{0x3630, 0x2e},
	{0x3632, 0xe2},
	{0x3633, 0x23},
	/*???? */
	{0x3704, 0xa0},
	{0x3703, 0x5a},
	{0x3715, 0x78},
	{0x3717, 0x01},
	{0x370b, 0x60},
	{0x3705, 0x1a},
	{0x3905, 0x02},
	{0x3906, 0x10},
	{0x3901, 0x0a},
	{0x3731, 0x12},
	/*VCM Control */
	{0x3600, 0x08},
	{0x3601, 0x33},
	{0x3604, 0x02},
	{0x3605, 0x8a},
	/*???? */
	{0x302d, 0x60},
	{0x3620, 0x52},
	{0x371b, 0x20},
	{0x471c, 0x50},
	/*AEC Controls */
	{0x3a13, 0x43},
	{0x3a18, 0x00},
	{0x3a19, 0xf8},
	/*???? */
	{0x3635, 0x1c},
	{0x3634, 0x40},
	{0x3622, 0x01},
	/*50/60Hz Detector */
	{0x3c01, 0x34},
	{0x3c04, 0x28},
	{0x3c05, 0x98},
	{0x3c06, 0x00},

	{0x3c07, 0x08},
	{0x3c08, 0x00},
	{0x3c09, 0x1c},
	{0x3c0a, 0x9c},
	{0x3c0b, 0x40},

	/* Sensor Read */
	{0x3820, 0x46},		/*vflip */
	{0x3814, 0x11},		/*X incr */
	{0x3815, 0x11},		/*Y incr */
	/* Sensor Timing control  2624 x 1952 --> 2560 x 1920 */
	{0x3800, 0x00},		/*X start */
	{0x3801, 0x20},
	{0x3802, 0x00},		/*Y start */
	{0x3803, 0x10},
	{0x3804, 0x0a},		/*X end */
	{0x3805, 0x1f},
	{0x3806, 0x07},		/*Y end */
	{0x3807, 0x8f},
	/* Output size */
	{0x3808, 0x0a},		/*output X  2592 */
	{0x3809, 0x20},
	{0x380a, 0x07},		/*output Y  1944 */
	{0x380b, 0x98},
	/* Total size (+blanking) */
	{0x380c, 0x0b},		/*Total X  2844 */
	{0x380d, 0x1c},
	{0x380e, 0x07},		/*Total Y  1968 */
	{0x380f, 0xb0},
	/* ISP Windowing size  2560 x 1920 --> 2560 x 1920 */
	{0x3810, 0x00},		/*ISP X offset = 0 */
	{0x3811, 0x00},
	{0x3812, 0x00},		/*ISP Y offset = 0 */
	{0x3813, 0x00},
	/*???? */
	{0x3618, 0x00},
	{0x3612, 0x29},
	{0x3708, 0x62},
	{0x3709, 0x52},
	{0x370c, 0x03},
	/*AEC/AGC */
	{0x3a02, 0x03},
	{0x3a03, 0xd8},
	{0x3a08, 0x01},
	{0x3a09, 0x27},
	{0x3a0a, 0x00},
	{0x3a0b, 0xf6},
	{0x3a0e, 0x03},
	{0x3a0d, 0x04},
	{0x3a14, 0x03},
	{0x3a15, 0xd8},
	/*BLC Control */
	{0x4001, 0x02},
	{0x4004, 0x02},
	/*ISP Control */
	{0x5000, 0xa7},
	{0x5001, 0xa3},		/*isp scale down  Special Effects */
	/*AWB Control */
	{0x5180, 0xff},
	{0x5181, 0x56},
	{0x5182, 0x00},
	{0x5183, 0x14},
	{0x5184, 0x25},
	{0x5185, 0x24},
	{0x5186, 0x10},
	{0x5187, 0x14},
	{0x5188, 0x10},
	{0x5189, 0x81},
	{0x518a, 0x5a},
	{0x518b, 0xb6},
	{0x518c, 0xa9},
	{0x518d, 0x4c},
	{0x518e, 0x34},
	{0x518f, 0x60},
	{0x5190, 0x48},
	{0x5191, 0xf8},
	{0x5192, 0x04},
	{0x5193, 0x70},
	{0x5194, 0xf0},
	{0x5195, 0xf0},
	{0x5196, 0x03},
	{0x5197, 0x01},
	{0x5198, 0x04},
	{0x5199, 0x9b},
	{0x519a, 0x04},
	{0x519b, 0x00},
	{0x519c, 0x09},
	{0x519d, 0x1e},
	{0x519e, 0x38},
	/*CMX Control */
	{0x5381, 0x1e},
	{0x5382, 0x5b},
	{0x5383, 0x08},
	{0x5384, 0x0a},
	{0x5385, 0x7e},
	{0x5386, 0x88},
	{0x5387, 0x7c},
	{0x5388, 0x6c},
	{0x5389, 0x10},
	{0x538a, 0x01},
	{0x538b, 0x98},
	/*CIP Control */
	{0x5300, 0x08},
	{0x5301, 0x30},
	{0x5302, 0x10},
	{0x5303, 0x00},
	{0x5304, 0x08},
	{0x5305, 0x30},
	{0x5306, 0x08},
	{0x5307, 0x16},
	{0x5309, 0x08},
	{0x530a, 0x30},
	{0x530b, 0x04},
	{0x530c, 0x06},
	/*Gamma Control */
	{0x5480, 0x01},
	{0x5481, 0x08},
	{0x5482, 0x14},
	{0x5483, 0x28},
	{0x5484, 0x51},
	{0x5485, 0x65},
	{0x5486, 0x71},
	{0x5487, 0x7d},
	{0x5488, 0x87},
	{0x5489, 0x91},
	{0x548a, 0x9a},
	{0x548b, 0xaa},
	{0x548c, 0xb8},
	{0x548d, 0xcd},
	{0x548e, 0xdd},
	{0x548f, 0xea},
	{0x5490, 0x1d},
	/*SDE Control */
	{0x5580, 0x02},
	{0x5583, 0x40},
	{0x5584, 0x10},
	{0x5589, 0x10},
	{0x558a, 0x00},
	{0x558b, 0xf8},
	/*LENC Control */
	{0x5800, 0x23},
	{0x5801, 0x14},
	{0x5802, 0x0f},
	{0x5803, 0x0f},
	{0x5804, 0x12},
	{0x5805, 0x26},
	{0x5806, 0x0c},
	{0x5807, 0x08},
	{0x5808, 0x05},
	{0x5809, 0x05},
	{0x580a, 0x08},
	{0x580b, 0x0d},
	{0x580c, 0x08},
	{0x580d, 0x03},
	{0x580e, 0x00},
	{0x580f, 0x00},
	{0x5810, 0x03},
	{0x5811, 0x09},
	{0x5812, 0x07},
	{0x5813, 0x03},
	{0x5814, 0x00},
	{0x5815, 0x01},
	{0x5816, 0x03},
	{0x5817, 0x08},
	{0x5818, 0x0d},
	{0x5819, 0x08},
	{0x581a, 0x05},
	{0x581b, 0x06},
	{0x581c, 0x08},
	{0x581d, 0x0e},
	{0x581e, 0x29},
	{0x581f, 0x17},
	{0x5820, 0x11},
	{0x5821, 0x11},
	{0x5822, 0x15},
	{0x5823, 0x28},
	{0x5824, 0x46},
	{0x5825, 0x26},
	{0x5826, 0x08},
	{0x5827, 0x26},
	{0x5828, 0x64},
	{0x5829, 0x26},
	{0x582a, 0x24},
	{0x582b, 0x22},
	{0x582c, 0x24},
	{0x582d, 0x24},
	{0x582e, 0x06},
	{0x582f, 0x22},
	{0x5830, 0x40},
	{0x5831, 0x42},
	{0x5832, 0x24},
	{0x5833, 0x26},
	{0x5834, 0x24},
	{0x5835, 0x22},
	{0x5836, 0x22},
	{0x5837, 0x26},
	{0x5838, 0x44},
	{0x5839, 0x24},
	{0x583a, 0x26},
	{0x583b, 0x28},
	{0x583c, 0x42},
	{0x583d, 0xce},

	{0x5025, 0x00},
	/*AEC Controls */
	{0x3a0f, 0x30},
	{0x3a10, 0x28},
	{0x3a1b, 0x30},
	{0x3a1e, 0x26},
	{0x3a11, 0x60},
	{0x3a1f, 0x14},

#if ENABLE_COLOR_PATTERN
	{0x503d, 0x80},		/* Solid Colour Bars */
#if 0
	{0x503d, 0x80},		/* Solid Colour Bars */
	{0x503d, 0x81},		/* Gradual change @ vertical mode 1 */
	{0x503d, 0x82},		/* Gradual change horizontal */
	{0x503d, 0x83},		/* Gradual change @ vertical mode 2 */
#endif
#endif

	{0xFFFF, 0x00},
};

static const struct ov5640_reg yuv422_init_common[] = {
	/* System Clock Div */
	{0x3035, 0x11},		/*SystemClkDiv 7:4, /1=728Mhz
				MIPI Sclk Div 3:0, /1=728Mhz */
	/*System/IO pad Control */
	{0x3000, 0x00},		/*Resets */
	{0x3002, 0x1c},
	{0x3004, 0xff},		/*Clocks */
	{0x3006, 0xc3},
	/*Format control */
	{0x4300, 0x32},		/*Output Format[7:4] Sequence[3:0] (UVYV) */
	/*MIPI Control */
	{0x4837, 0x0a},
	/*PCLK Divider */
	{0x3824, 0x01},		/*Scale Divider [4:0] */
	{0x3008, 0x42},		/*stop sensor streaming */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg jpeg_init_common[] = {
	/* System Clock Div */
	{0x3035, 0x12},		/*SystemClkDiv 7:4, /1=676Mhz
			  MIPI Sclk Div 3:0, /1=676Mhz */
	/*System/IO pad Control */
	{0x3000, 0x00},		/*Resets */
	{0x3002, 0x00},
	{0x3004, 0xff},		/*Clocks */
	{0x3006, 0xff},
	/*Format control */
	{0x4300, 0x30},		/*Output Format[7:4] Sequence[3:0] (UVYV) */
	/*MIPI Control */
	{0x4837, 0x16},
	/*PCLK Divider */
	{0x3824, 0x04},		/*Scale Divider [4:0] */
	{0x3008, 0x42},		/*stop sensor streaming */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_stream[] = {
	/* System Control */
	{0x300e, 0x45},		/* enable 2 lane MIPI */
	{0x3008, 0x02},		/* enable streaming */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_power_down[] = {
	/* System Control */
	{0x3008, 0x42},		/* disable streaming */
	{0x300e, 0x58},		/* power down MIPI */
	{0xFFFF, 1},		/* Sleep 1ms */

	{0xFFFF, 0x00}
};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/*EFFECT */
static const struct ov5640_reg ov5640_effect_normal_tbl[] = {
	{0x5580, 0x02},		/*00 58 */
	{0x5583, 0x40},
	{0x5584, 0x40},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_effect_bw_tbl[] = {
	{0x5001, 0xab},		/*80 80 */
	{0x5580, 0x18},		/*18 58 */
	{0x5583, 0x80},
	{0x5584, 0x80},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_effect_sepia_tbl[] = {
	{0x5001, 0xab},		/*80 80 */
	{0x5580, 0x1a},		/*18 58 */
	{0x5583, 0x40},
	{0x5584, 0xa0},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_effect_negative_tbl[] = {
	{0x5001, 0xab},		/*80 80 */
	{0x5580, 0x42},		/*40 58 */

	{0xFFFF, 0x00}
};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/*AntiBanding */
static const struct ov5640_reg ov5640_antibanding_auto_tbl[] = {
	/*@@ Auto-XCLK24MHz */
	{0x3622, 0x01},		/*PD-sel */
	{0x3635, 0x1c},		/*VMREF 3635[2:0] */
	{0x3634, 0x40},		/*I_5060 3643[2:0] */
	{0x3c01, 0x34},
	{0x3c00, 0x00},
	{0x3c04, 0x28},
	{0x3c05, 0x98},
	{0x3c06, 0x00},
	{0x3c07, 0x08},
	{0x3c08, 0x00},
	{0x3c09, 0x1c},
	{0x300c, 0x22},		/*50/60div 300c[2:0] */
	{0x3c0a, 0x9c},		/* 4e */
	{0x3c0b, 0x40},		/* 1f */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_antibanding_50z_tbl[] = {
	/*Band 50Hz */
	{0x3c01, 0xb4},		/*80 */
	{0x3c00, 0x04},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_antibanding_60z_tbl[] = {
	/*Band 60Hz */
	{0x3c01, 0xb4},		/*80 */
	{0x3c00, 0x00},

	{0xFFFF, 0x00}
};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/*Lens_shading*/

static const struct ov5640_reg ov5640_lens_shading_on_tbl[] = {
	/*@@ Lenc On(C) */
	{0x5000, 0xa7},		/*80 80 */

	{0xFFFF, 0x00}
};


static const struct ov5640_reg ov5640_lens_shading_off_tbl[] = {
	/*@@ Lenc Off */
	{0x5000, 0x27},		/*00 80 */

	{0xFFFF, 0x00}
};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/*Contrast */

static const struct ov5640_reg ov5640_contrast_default_lv3_tbl[] = {
	/*@@ Contrast default */
	{0x5001, 0xab},		/*80 80 */
	{0x5580, 0x06},		/*04 04
				;Enable BIT2 for contrast/brightness control */
	{0x5586, 0x20},		/*Gain */
	{0x5585, 0x00},		/*Offset */
	{0x5588, 0x01},		/*00 04 ;Offset sign */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_contrast_lv0_tbl[] = {
	/*@@ Contrast +3 */
	{0x5001, 0xab},		/*80 80 */
	{0x5580, 0x06},		/*04 04
				;Enable BIT2 for contrast/brightness control */
	{0x5586, 0x2c},		/*Gain */
	{0x5585, 0x1c},		/*Offset */
	{0x5588, 0x01},		/*00 04 ;Offset sign */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_contrast_lv1_tbl[] = {
	/*@@ Contrast +2 */
	{0x5001, 0xab},		/*80 80 */
	{0x5580, 0x06},		/*04 04
				;Enable BIT2 for contrast/brightness control */
	{0x5586, 0x28},		/*Gain */
	{0x5585, 0x18},		/*Offset */
	{0x5588, 0x01},		/*00 04 ;Offset sign */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_contrast_lv2_tbl[] = {
	/*@@ Contrast +1 */
	{0x5001, 0xab},		/*80 80 */
	{0x5580, 0x06},		/*04 04
				;Enable BIT2 for contrast/brightness control */
	{0x5586, 0x24},		/*Gain */
	{0x5585, 0x10},		/*Offset */
	{0x5588, 0x01},		/*00 04 ;Offset sign */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_contrast_lv4_tbl[] = {
	/*@@ Contrast -1  */
	{0x5001, 0xab},		/*80 80 */
	{0x5580, 0x06},		/*04 04
				;Enable BIT2 for contrast/brightness control */
	{0x5586, 0x1c},		/*Gain */
	{0x5585, 0x1c},		/*Offset */
	{0x5588, 0x01},		/*00 04 ;Offset sign */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_contrast_lv5_tbl[] = {
	/*@@ Contrast -2  */
	{0x5001, 0xab},		/*80 80 */
	{0x5580, 0x06},		/*04 04
				;Enable BIT2 for contrast/brightness control */
	{0x5586, 0x18},		/*Gain */
	{0x5585, 0x18},		/*Offset */
	{0x5588, 0x01},		/*00 04 ;Offset sign */

	{0xFFFF, 0x00}
};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/*sharpness */

static const struct ov5640_reg ov5640_sharpness_default_lv2_tbl[] = {
	/*@@ @@ Sharpness 2 */
	{0x5308, 0x65},		/*40 40 */
	{0x5502, 0x04},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_sharpness_lv0_tbl[] = {
	/*@@ @@ Sharpness OFF */
	{0x5308, 0x65},		/*40 40 */
	{0x5502, 0x00},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_sharpness_lv1_tbl[] = {
	/* @@ @@ Sharpness 1 */
	{0x5308, 0x65},		/* 40 40 */
	{0x5502, 0x02},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_sharpness_lv3_tbl[] = {
	/* @@ @@ Sharpness 3 */
	{0x5308, 0x65},		/* 40 40 */
	{0x5502, 0x08},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_sharpness_lv4_tbl[] = {
	/* @@ @@ Sharpness OFF */
	{0x5308, 0x65},		/* 40 40 */
	{0x5502, 0x10},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_sharpness_lv5_tbl[] = {
	/* @@ @@ Sharpness OFF */
	{0x5308, 0x65},		/* 40 40 */
	{0x5502, 0x00},

	{0xFFFF, 0x00}
};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/* saturation */

static const struct ov5640_reg ov5640_saturation_default_lv3_tbl[] = {
	/* @@ x1 (Default) */
	{0x5001, 0xab},		/* 80 80  SDE_En */
	{0x5583, 0x40},
	{0x5584, 0x40},
	{0x5580, 0x00},		/* 00 02 */
	{0x5588, 0x41},		/* 40 40 */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_saturation_lv0_tbl[] = {
	/* @@ x0.25 */
	{0x5001, 0xab},		/* 80 80  SDE_En */
	{0x5583, 0x20},
	{0x5584, 0x20},
	{0x5580, 0x02},		/* 00 02 */
	{0x5588, 0x41},		/* 40 40 */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_saturation_lv1_tbl[] = {
	/* @@ x0.5 */
	{0x5001, 0xab},		/* 80 80  SDE_En */
	{0x5583, 0x30},
	{0x5584, 0x30},
	{0x5580, 0x02},		/* 00 02 */
	{0x5588, 0x41},		/* 40 40 */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_saturation_lv2_tbl[] = {
	/* @@ x0.75 */
	{0x5001, 0xab},		/* 80 80  SDE_En */
	{0x5583, 0x40},
	{0x5584, 0x40},
	{0x5580, 0x02},		/* 00 02 */
	{0x5588, 0x41},		/* 40 40 */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_saturation_lv4_tbl[] = {
	/* @@ x1.25 */
	{0x5001, 0xab},		/* 80 80  SDE_En */
	{0x5583, 0x50},
	{0x5584, 0x50},
	{0x5580, 0x02},		/* 00 02 */
	{0x5588, 0x41},		/* 40 40 */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_saturation_lv5_tbl[] = {
	/* @@ x1.5 */
	{0x5001, 0xab},		/* 80 80  SDE_En */
	{0x5583, 0x60},
	{0x5584, 0x60},
	{0x5580, 0x02},		/* 00 02 */
	{0x5588, 0x41},		/* 40 40 */

	{0xFFFF, 0x00}
};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/* brightness */

static const struct ov5640_reg ov5640_brightness_lv0_tbl[] = {
	/* @@ +1.7EV */
	{0x3a0f, 0x60},
	{0x3a10, 0x58},
	{0x3a11, 0xa0},
	{0x3a1b, 0x60},
	{0x3a1e, 0x58},
	{0x3a1f, 0x20},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_brightness_lv1_tbl[] = {
	/* @@ +1.0EV */
	{0x3a0f, 0x50},
	{0x3a10, 0x48},
	{0x3a11, 0x90},
	{0x3a1b, 0x50},
	{0x3a1e, 0x48},
	{0x3a1f, 0x20},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_brightness_lv2_default_tbl[] = {
	/* @@ default */
	{0x3a0f, 0x38},
	{0x3a10, 0x30},
	{0x3a11, 0x61},
	{0x3a1b, 0x38},
	{0x3a1e, 0x30},
	{0x3a1f, 0x10},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_brightness_lv3_tbl[] = {
	/* @@ -1.0EV */
	{0x3a0f, 0x20},
	{0x3a10, 0x18},
	{0x3a11, 0x41},
	{0x3a1b, 0x20},
	{0x3a1e, 0x18},
	{0x3a1f, 0x10},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_brightness_lv4_tbl[] = {
	/* @@ -1.7EV */
	{0x3a0f, 0x10},
	{0x3a10, 0x08},
	{0x3a11, 0x10},
	{0x3a1b, 0x10},
	{0x3a1e, 0x08},
	{0x3a1f, 0x10},

	{0xFFFF, 0x00}
};

/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/* Auto Expourse */

static const struct ov5640_reg ov5640_ae_average_tbl[] = {
	/* @@ Whole Image Average */
	{0x5688, 0x11},		/* Zone 1/Zone 0 weight */
	{0x5689, 0x11},		/* Zone 3/Zone 2 weight */
	{0x569a, 0x11},		/* Zone 5/Zone 4 weight */
	{0x569b, 0x11},		/* Zone 7/Zone 6 weight */
	{0x569c, 0x11},		/* Zone 9/Zone 8 weight */
	{0x569d, 0x11},		/* Zone b/Zone a weight */
	{0x569e, 0x11},		/* Zone d/Zone c weight */
	{0x569f, 0x11},		/* Zone f/Zone e weight */

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_ae_centerweight_tbl[] = {
	/*@@ Whole Image Center More weight*/
	{0x5688, 0x62},
	{0x5689, 0x26},
	{0x568a, 0xe6},
	{0x568b, 0x6e},
	{0x568c, 0xea},
	{0x568d, 0xae},
	{0x568e, 0xa6},
	{0x568f, 0x6a},

	{0xFFFF, 0x00}
};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/*default awb */
static const struct ov5640_reg ov5640_wb_def[] = {
	{0x3406, 0X00},
	{0x5180, 0Xff},
	{0x5181, 0Xf2},
	{0x5182, 0X11},
	{0x5183, 0X14},
	{0x5184, 0X25},
	{0x5185, 0X24},
	{0x5186, 0X06},
	{0x5187, 0X09},
	{0x5188, 0X09},
	{0x5189, 0X7b},		/*;70*/
	{0x518a, 0X54},		/*;56*/
	{0x518b, 0Xb8},
	{0x518c, 0Xb2},
	{0x518d, 0X42},		/*;4a*/
	{0x518e, 0X3d},
	{0x518f, 0X56},
	{0x5190, 0X46},
	{0x5191, 0Xf8},
	{0x5192, 0X04},
	{0x5193, 0X70},
	{0x5194, 0Xf0},
	{0x5195, 0Xf0},
	{0x5196, 0X03},
	{0x5197, 0X01},
	{0x5198, 0X05},
	{0x5199, 0X42},
	{0x519a, 0X04},
	{0x519b, 0X00},
	{0x519c, 0X07},
	{0x519d, 0X28},
	{0x519e, 0X38},

	{0xFFFF, 0x00}
};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/* White Balance */
static const struct ov5640_reg ov5640_wb_fluorescent[] = {
	{0x3400, 0x05},
	{0x3401, 0x44},
	{0x3402, 0x04},
	{0x3403, 0x00},
	{0x3404, 0x07},
	{0x3405, 0x0c},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_wb_daylight[] = {
	{0x3400, 0x06},
	{0x3401, 0x1c},
	{0x3402, 0x04},
	{0x3403, 0x00},
	{0x3404, 0x04},
	{0x3405, 0xf3},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_wb_cloudy[] = {
	{0x3400, 0x06},
	{0x3401, 0x48},
	{0x3402, 0x04},
	{0x3403, 0x00},
	{0x3404, 0x04},
	{0x3405, 0xd3},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_wb_tungsten[] = {
	{0x3400, 0x04},
	{0x3401, 0x28},
	{0x3402, 0x04},
	{0x3403, 0x00},
	{0x3404, 0x08},
	{0x3405, 0x55},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_fps_5[] = {
	{0x3036, 0x34},		/* PLL Mult 4~252 0:7  0x34=52=328Mhz */
	{0x380c, 0x19},		/*Total X  6600 */
	{0x380d, 0xc8},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_fps_7[] = {
	{0x3036, 0x48},		/* PLL Mult 4~252 0:7  0x48=72=473Mhz */
	{0x380c, 0x19},		/*Total X  6600 */
	{0x380d, 0xc8},

	{0xFFFF, 0x00}
};
static const struct ov5640_reg ov5640_fps_10[] = {
	{0x3036, 0x68},		/* PLL Mult 4~252 0:7  0x68=104=676Mhz */
	{0x380c, 0x19},		/*Total X  6600 */
	{0x380d, 0xc8},

	{0xFFFF, 0x00}
};
static const struct ov5640_reg ov5640_fps_15[] = {
	{0x3036, 0x68},		/* PLL Mult 4~252 0:7  0x68=104=676Mhz */
	{0x380c, 0x11},		/*Total X  4400 */
	{0x380d, 0x30},

	{0xFFFF, 0x00}
};
static const struct ov5640_reg ov5640_fps_20[] = {
	{0x3036, 0x68},		/* PLL Mult 4~252 0:7  0x68=104=676Mhz */
	{0x380c, 0x0c},		/*Total X  3300 */
	{0x380d, 0xe4},

	{0xFFFF, 0x00}
};
static const struct ov5640_reg ov5640_fps_25[] = {
	{0x3036, 0x68},		/* PLL Mult 4~252 0:7  0x68=104=676Mhz */
	{0x380c, 0x0a},		/*Total X  2640 */
	{0x380d, 0x50},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_fps_30[] = {
	{0x3036, 0x68},		/* PLL Mult 4~252 0:7  0x68=104=676Mhz */
	{0x380c, 0x08},		/*Total X  2200 */
	{0x380d, 0x98},

	{0xFFFF, 0x00}
};


static const struct ov5640_reg ov5640_afpreinit_tbl[] = {
/* Sensor should be  Streaming */
	{0x3000, 0x20},

	{0xFFFF, 0x00}
};

static const struct ov5640_reg ov5640_afpostinit_tbl[] = {
	{0x3022, 0x00},
	{0x3023, 0x00},
	{0x3024, 0x00},
	{0x3025, 0x00},
	{0x3026, 0x00},
	{0x3027, 0x00},
	{0x3028, 0x00},
	{0x3029, 0x7f},
	{0x3000, 0x00},

	{0xFFFF, 0x00}
};

const u8 ov5640_afinit_data[] = {
	0x80, 0x00,	/* register addr */
	0x02, 0x00, 0x06, 0x02, 0x0c, 0xfa, 0x78, 0x7f, 0xe4, 0xf6, 0xd8, 0xfd,
	    0x75, 0x81, 0xe4, 0x02, 0x09, 0x97, 0x32, 0x02, 0x00, 0x12, 0x90,
	    0x38, 0x04, 0xe0, 0xfe, 0xa3, 0xe0, 0xfd, 0xee, 0xf5, 0x0f, 0xed,
	    0xf5, 0x10, 0x90, 0x38, 0x00, 0xe0, 0xfe, 0xa3, 0xe0, 0xfd, 0xed,
	    0xff, 0x12, 0x09, 0x4b, 0x90, 0x38, 0x10, 0x12, 0x09, 0x82, 0x12,
	    0x09, 0x4b, 0x90, 0x38, 0x06, 0xe0, 0xfe, 0xa3, 0xe0, 0xfd, 0xee,
	    0xf5, 0x11, 0xed, 0xf5, 0x12, 0x90, 0x38, 0x02, 0xe0, 0xfe, 0xa3,
	    0xe0, 0xfd, 0xed, 0xff, 0x12, 0x09, 0x57, 0x90, 0x38, 0x12, 0x12,
	    0x09, 0x82, 0x12, 0x09, 0x57, 0xa3, 0xe0, 0xb4, 0x31, 0x0b, 0xe5,
	    0x0f, 0xc3, 0x13, 0xf5, 0x0f, 0xe5, 0x10, 0x13, 0xf5, 0x10, 0x90,
	    0x38, 0x14, 0xe0, 0xb4, 0x71, 0x11, 0xe5, 0x10, 0xae, 0x0f, 0x78,
	    0x02, 0xce, 0xc3, 0x13, 0xce, 0x13, 0xd8, 0xf9, 0xf5, 0x10, 0x8e,
	    0x0f, 0x90, 0x38, 0x15, 0xe0, 0xb4, 0x31, 0x0b, 0xe5, 0x11, 0xc3,
	    0x13, 0xf5, 0x11, 0xe5, 0x12, 0x13, 0xf5, 0x12, 0x90, 0x38, 0x15,
	    0xe0, 0xb4, 0x71, 0x11, 0xe5, 0x12, 0xae, 0x11, 0x78, 0x02, 0xce,
	    0xc3, 0x13, 0xce, 0x13, 0xd8, 0xf9, 0xf5, 0x12, 0x8e, 0x11, 0xe5,
	    0x0f, 0xc4, 0xf8, 0x54, 0xf0, 0xc8, 0x68, 0xf5, 0x0f, 0xe5, 0x10,
	    0xc4, 0x54, 0x0f, 0x48, 0xf5, 0x10, 0xe5, 0x11, 0xc4, 0xf8, 0x54,
	    0xf0, 0xc8, 0x68, 0xf5, 0x11, 0xe5, 0x12, 0xc4, 0x54, 0x0f, 0x48,
	    0xf5, 0x12, 0xe4, 0xfa, 0xea, 0x70, 0x04, 0x7f, 0x04, 0x80, 0x02,
	    0x7f, 0x03, 0x8f, 0x0d, 0xe5, 0x0d, 0x25, 0xe0, 0xf5, 0x0e, 0xea,
	    0x70, 0x06, 0xae, 0x0f, 0xaf, 0x10, 0x80, 0x04, 0xae, 0x11, 0xaf,
	    0x12, 0x8e, 0x13, 0x8f, 0x14, 0xe4, 0xfb, 0xc3, 0xe5, 0x14, 0x95,
	    0x0e, 0xe5, 0x13, 0x94, 0x00, 0x50, 0x0e, 0xe4, 0xf5, 0x09, 0xf5,
	    0x0a, 0x85, 0x13, 0x0b, 0x85, 0x14, 0x0c, 0x02, 0x02, 0x00, 0xea,
	    0x70, 0x09, 0xeb, 0x25, 0xe0, 0x25, 0xe0, 0x24, 0x6d, 0x80, 0x07,
	    0xeb, 0x25, 0xe0, 0x25, 0xe0, 0x24, 0x6e, 0xf8, 0xe6, 0x75, 0x09,
	    0x00, 0xf5, 0x0a, 0xae, 0x09, 0xaf, 0x0a, 0xac, 0x13, 0xad, 0x14,
	    0x12, 0x02, 0xce, 0x8e, 0x09, 0x8f, 0x0a, 0xea, 0x70, 0x09, 0xeb,
	    0x25, 0xe0, 0x25, 0xe0, 0x24, 0x6f, 0x80, 0x07, 0xeb, 0x25, 0xe0,
	    0x25, 0xe0, 0x24, 0x70, 0xf8, 0xe6, 0x75, 0x0b, 0x00, 0xf5, 0x0c,
	    0xae, 0x0b, 0xaf, 0x0c, 0xac, 0x13, 0xad, 0x14, 0x12, 0x02, 0xce,
	    0x8e, 0x0b, 0x8f, 0x0c, 0xea, 0xae, 0x09, 0xaf, 0x0a, 0x60, 0x05,
	    0x90, 0x0e, 0x62, 0x80, 0x03, 0x90, 0x0e, 0x61, 0xe4, 0x93, 0xfd,
	    0x7c, 0x00, 0x12, 0x02, 0xe0, 0x8e, 0x09, 0x8f, 0x0a, 0xae, 0x0b,
	    0xaf, 0x0c, 0xe4, 0x93, 0xfd, 0x7c, 0x00, 0x12, 0x02, 0xe0, 0x8e,
	    0x0b, 0x8f, 0x0c, 0xc3, 0xe5, 0x0c, 0x95, 0x0a, 0xff, 0xe5, 0x0b,
	    0x95, 0x09, 0xfe, 0xc3, 0xef, 0x95, 0x0e, 0xee, 0x94, 0x00, 0x50,
	    0x5c, 0xe5, 0x0c, 0x25, 0x0a, 0xff, 0xe5, 0x0b, 0x35, 0x09, 0xc3,
	    0x13, 0xfe, 0xef, 0x13, 0xff, 0xc3, 0x95, 0x0d, 0xee, 0x94, 0x00,
	    0x50, 0x0c, 0xe4, 0xf5, 0x09, 0xf5, 0x0a, 0xf5, 0x0b, 0x85, 0x0e,
	    0x0c, 0x80, 0x39, 0xe5, 0x0d, 0x2f, 0xfd, 0xe4, 0x3e, 0xfc, 0xd3,
	    0xed, 0x95, 0x14, 0xec, 0x95, 0x13, 0x40, 0x14, 0x85, 0x13, 0x0b,
	    0x85, 0x14, 0x0c, 0xe5, 0x14, 0x95, 0x0e, 0xf5, 0x0a, 0xe5, 0x13,
	    0x94, 0x00, 0xf5, 0x09, 0x80, 0x15, 0xad, 0x0d, 0x7c, 0x00, 0xc3,
	    0xef, 0x9d, 0xf5, 0x0a, 0xee, 0x9c, 0xf5, 0x09, 0xed, 0x2f, 0xf5,
	    0x0c, 0xec, 0x3e, 0xf5, 0x0b, 0xeb, 0x75, 0xf0, 0x08, 0xa4, 0x24,
	    0x85, 0xf8, 0xea, 0x25, 0xe0, 0x28, 0xf8, 0xa6, 0x09, 0x08, 0xa6,
	    0x0a, 0xeb, 0x75, 0xf0, 0x08, 0xa4, 0x24, 0x89, 0xf8, 0xea, 0x25,
	    0xe0, 0x28, 0xf8, 0xa6, 0x0b, 0x08, 0xa6, 0x0c, 0x0b, 0xeb, 0x64,
	    0x05, 0x60, 0x03, 0x02, 0x00, 0xfa, 0x0a, 0xea, 0x64, 0x02, 0x60,
	    0x03, 0x02, 0x00, 0xd6, 0xe4, 0xfa, 0x7b, 0x01, 0xeb, 0x75, 0xf0,
	    0x08, 0xa4, 0x24, 0x8c, 0xf9, 0xea, 0x12, 0x09, 0x63, 0xc3, 0x97,
	    0xee, 0x19, 0x97, 0x50, 0x04, 0xaf, 0x03, 0x80, 0x02, 0xaf, 0x02,
	    0xaa, 0x07, 0x0b, 0xbb, 0x05, 0xe1, 0xea, 0x60, 0x0b, 0x12, 0x09,
	    0x63, 0xff, 0x78, 0x8b, 0xa6, 0x06, 0x08, 0xa6, 0x07, 0x78, 0x86,
	    0xe6, 0x90, 0x60, 0x01, 0xf0, 0x78, 0x88, 0xe6, 0xa3, 0xf0, 0x78,
	    0x8a, 0xe6, 0xa3, 0xf0, 0x78, 0x8c, 0xe6, 0xa3, 0xf0, 0x78, 0x8e,
	    0xe6, 0xa3, 0xf0, 0x78, 0x90, 0xe6, 0xa3, 0xf0, 0x78, 0x92, 0xe6,
	    0xa3, 0xf0, 0x78, 0x94, 0xe6, 0xa3, 0xf0, 0x78, 0x96, 0xe6, 0xa3,
	    0xf0, 0x78, 0x98, 0xe6, 0xa3, 0xf0, 0x78, 0x9a, 0xe6, 0xa3, 0xf0,
	    0x78, 0x9c, 0xe6, 0xa3, 0xf0, 0x78, 0x9e, 0xe6, 0xa3, 0xf0, 0x78,
	    0xa0, 0xe6, 0xa3, 0xf0, 0x78, 0xa2, 0xe6, 0xa3, 0xf0, 0x78, 0xa4,
	    0xe6, 0xa3, 0xf0, 0x78, 0xa6, 0xe6, 0xa3, 0xf0, 0x78, 0xa8, 0xe6,
	    0xa3, 0xf0, 0x78, 0xaa, 0xe6, 0xa3, 0xf0, 0x78, 0xac, 0xe6, 0xa3,
	    0xf0, 0x22, 0xef, 0x8d, 0xf0, 0xa4, 0xa8, 0xf0, 0xcf, 0x8c, 0xf0,
	    0xa4, 0x28, 0xce, 0x8d, 0xf0, 0xa4, 0x2e, 0xfe, 0x22, 0xbc, 0x00,
	    0x0b, 0xbe, 0x00, 0x29, 0xef, 0x8d, 0xf0, 0x84, 0xff, 0xad, 0xf0,
	    0x22, 0xe4, 0xcc, 0xf8, 0x75, 0xf0, 0x08, 0xef, 0x2f, 0xff, 0xee,
	    0x33, 0xfe, 0xec, 0x33, 0xfc, 0xee, 0x9d, 0xec, 0x98, 0x40, 0x05,
	    0xfc, 0xee, 0x9d, 0xfe, 0x0f, 0xd5, 0xf0, 0xe9, 0xe4, 0xce, 0xfd,
	    0x22, 0xed, 0xf8, 0xf5, 0xf0, 0xee, 0x84, 0x20, 0xd2, 0x1c, 0xfe,
	    0xad, 0xf0, 0x75, 0xf0, 0x08, 0xef, 0x2f, 0xff, 0xed, 0x33, 0xfd,
	    0x40, 0x07, 0x98, 0x50, 0x06, 0xd5, 0xf0, 0xf2, 0x22, 0xc3, 0x98,
	    0xfd, 0x0f, 0xd5, 0xf0, 0xea, 0x22, 0xe8, 0x8f, 0xf0, 0xa4, 0xcc,
	    0x8b, 0xf0, 0xa4, 0x2c, 0xfc, 0xe9, 0x8e, 0xf0, 0xa4, 0x2c, 0xfc,
	    0x8a, 0xf0, 0xed, 0xa4, 0x2c, 0xfc, 0xea, 0x8e, 0xf0, 0xa4, 0xcd,
	    0xa8, 0xf0, 0x8b, 0xf0, 0xa4, 0x2d, 0xcc, 0x38, 0x25, 0xf0, 0xfd,
	    0xe9, 0x8f, 0xf0, 0xa4, 0x2c, 0xcd, 0x35, 0xf0, 0xfc, 0xeb, 0x8e,
	    0xf0, 0xa4, 0xfe, 0xa9, 0xf0, 0xeb, 0x8f, 0xf0, 0xa4, 0xcf, 0xc5,
	    0xf0, 0x2e, 0xcd, 0x39, 0xfe, 0xe4, 0x3c, 0xfc, 0xea, 0xa4, 0x2d,
	    0xce, 0x35, 0xf0, 0xfd, 0xe4, 0x3c, 0xfc, 0x22, 0x75, 0xf0, 0x08,
	    0x75, 0x82, 0x00, 0xef, 0x2f, 0xff, 0xee, 0x33, 0xfe, 0xcd, 0x33,
	    0xcd, 0xcc, 0x33, 0xcc, 0xc5, 0x82, 0x33, 0xc5, 0x82, 0x9b, 0xed,
	    0x9a, 0xec, 0x99, 0xe5, 0x82, 0x98, 0x40, 0x0c, 0xf5, 0x82, 0xee,
	    0x9b, 0xfe, 0xed, 0x9a, 0xfd, 0xec, 0x99, 0xfc, 0x0f, 0xd5, 0xf0,
	    0xd6, 0xe4, 0xce, 0xfb, 0xe4, 0xcd, 0xfa, 0xe4, 0xcc, 0xf9, 0xa8,
	    0x82, 0x22, 0xb8, 0x00, 0xc1, 0xb9, 0x00, 0x59, 0xba, 0x00, 0x2d,
	    0xec, 0x8b, 0xf0, 0x84, 0xcf, 0xce, 0xcd, 0xfc, 0xe5, 0xf0, 0xcb,
	    0xf9, 0x78, 0x18, 0xef, 0x2f, 0xff, 0xee, 0x33, 0xfe, 0xed, 0x33,
	    0xfd, 0xec, 0x33, 0xfc, 0xeb, 0x33, 0xfb, 0x10, 0xd7, 0x03, 0x99,
	    0x40, 0x04, 0xeb, 0x99, 0xfb, 0x0f, 0xd8, 0xe5, 0xe4, 0xf9, 0xfa,
	    0x22, 0x78, 0x18, 0xef, 0x2f, 0xff, 0xee, 0x33, 0xfe, 0xed, 0x33,
	    0xfd, 0xec, 0x33, 0xfc, 0xc9, 0x33, 0xc9, 0x10, 0xd7, 0x05, 0x9b,
	    0xe9, 0x9a, 0x40, 0x07, 0xec, 0x9b, 0xfc, 0xe9, 0x9a, 0xf9, 0x0f,
	    0xd8, 0xe0, 0xe4, 0xc9, 0xfa, 0xe4, 0xcc, 0xfb, 0x22, 0x75, 0xf0,
	    0x10, 0xef, 0x2f, 0xff, 0xee, 0x33, 0xfe, 0xed, 0x33, 0xfd, 0xcc,
	    0x33, 0xcc, 0xc8, 0x33, 0xc8, 0x10, 0xd7, 0x07, 0x9b, 0xec, 0x9a,
	    0xe8, 0x99, 0x40, 0x0a, 0xed, 0x9b, 0xfd, 0xec, 0x9a, 0xfc, 0xe8,
	    0x99, 0xf8, 0x0f, 0xd5, 0xf0, 0xda, 0xe4, 0xcd, 0xfb, 0xe4, 0xcc,
	    0xfa, 0xe4, 0xc8, 0xf9, 0x22, 0xeb, 0x9f, 0xf5, 0xf0, 0xea, 0x9e,
	    0x42, 0xf0, 0xe9, 0x9d, 0x42, 0xf0, 0xe8, 0x9c, 0x45, 0xf0, 0x22,
	    0xe8, 0x60, 0x0f, 0xec, 0xc3, 0x13, 0xfc, 0xed, 0x13, 0xfd, 0xee,
	    0x13, 0xfe, 0xef, 0x13, 0xff, 0xd8, 0xf1, 0x22, 0xe8, 0x60, 0x0f,
	    0xef, 0xc3, 0x33, 0xff, 0xee, 0x33, 0xfe, 0xed, 0x33, 0xfd, 0xec,
	    0x33, 0xfc, 0xd8, 0xf1, 0x22, 0xe4, 0x93, 0xfc, 0x74, 0x01, 0x93,
	    0xfd, 0x74, 0x02, 0x93, 0xfe, 0x74, 0x03, 0x93, 0xff, 0x22, 0xec,
	    0xf6, 0x08, 0xed, 0xf6, 0x08, 0xee, 0xf6, 0x08, 0xef, 0xf6, 0x22,
	    0xd0, 0x83, 0xd0, 0x82, 0xe4, 0x93, 0xf6, 0x08, 0x74, 0x01, 0x93,
	    0xf6, 0x08, 0x74, 0x02, 0x93, 0xf6, 0x08, 0x74, 0x03, 0x93, 0xf6,
	    0x74, 0x04, 0x73, 0xa4, 0x25, 0x82, 0xf5, 0x82, 0xe5, 0xf0, 0x35,
	    0x83, 0xf5, 0x83, 0x22, 0xd0, 0x83, 0xd0, 0x82, 0xf8, 0xe4, 0x93,
	    0x70, 0x12, 0x74, 0x01, 0x93, 0x70, 0x0d, 0xa3, 0xa3, 0x93, 0xf8,
	    0x74, 0x01, 0x93, 0xf5, 0x82, 0x88, 0x83, 0xe4, 0x73, 0x74, 0x02,
	    0x93, 0x68, 0x60, 0xef, 0xa3, 0xa3, 0xa3, 0x80, 0xdf, 0xe4, 0xf5,
	    0x0d, 0x75, 0x0e, 0xff, 0xfb, 0x74, 0x3b, 0x12, 0x08, 0xac, 0x40,
	    0x28, 0x74, 0x4d, 0x2b, 0xf8, 0xe4, 0xf6, 0x74, 0x3b, 0x2b, 0xf8,
	    0xe6, 0xff, 0xe5, 0x0e, 0xd3, 0x9f, 0x40, 0x02, 0x80, 0x02, 0xaf,
	    0x0e, 0x8f, 0x0e, 0xe6, 0xff, 0xe5, 0x0d, 0xc3, 0x9f, 0x50, 0x02,
	    0x80, 0x02, 0xaf, 0x0d, 0x8f, 0x0d, 0x80, 0x06, 0x74, 0x4d, 0x2b,
	    0xf8, 0x76, 0x01, 0x0b, 0xbb, 0x05, 0xc7, 0xe4, 0xfb, 0x74, 0xe0,
	    0x2b, 0xf8, 0xe4, 0xf6, 0x12, 0x08, 0xaa, 0x40, 0x03, 0x02, 0x05,
	    0xcb, 0xeb, 0x25, 0xe0, 0x24, 0x6d, 0x12, 0x09, 0x06, 0x85, 0x09,
	    0x0b, 0xf5, 0x0c, 0x74, 0xe0, 0x2b, 0xf8, 0xe4, 0xf6, 0x7f, 0x01,
	    0x12, 0x09, 0x0f, 0xc3, 0xe5, 0x0a, 0x97, 0xe5, 0x09, 0x19, 0x97,
	    0x50, 0x11, 0xef, 0x12, 0x08, 0xb4, 0xeb, 0x25, 0xe0, 0x28, 0x12,
	    0x09, 0x06, 0x74, 0xe0, 0x2b, 0xf8, 0xa6, 0x07, 0x12, 0x09, 0x0f,
	    0xd3, 0xe5, 0x0c, 0x97, 0xe5, 0x0b, 0x19, 0x97, 0x40, 0x10, 0xef,
	    0x12, 0x08, 0xb4, 0xeb, 0x25, 0xe0, 0x28, 0xf8, 0xe6, 0xf5, 0x0b,
	    0x08, 0xe6, 0xf5, 0x0c, 0x0f, 0xbf, 0x05, 0xc1, 0xeb, 0x25, 0xe0,
	    0x24, 0x9f, 0xf8, 0xa6, 0x09, 0x08, 0xa6, 0x0a, 0xae, 0x0b, 0xaf,
	    0x0c, 0x7c, 0x00, 0x7d, 0x0b, 0x12, 0x02, 0xce, 0x8e, 0x0b, 0x8f,
	    0x0c, 0xae, 0x09, 0xaf, 0x0a, 0x1d, 0x12, 0x02, 0xce, 0x8e, 0x09,
	    0x8f, 0x0a, 0xd3, 0xe5, 0x0c, 0x95, 0x0a, 0xe5, 0x0b, 0x95, 0x09,
	    0x40, 0x06, 0x74, 0x4d, 0x2b, 0xf8, 0x76, 0x02, 0x0b, 0xeb, 0x64,
	    0x05, 0x60, 0x03, 0x02, 0x05, 0x32, 0xe4, 0xf5, 0x09, 0xf5, 0x0a,
	    0xff, 0xfb, 0x12, 0x08, 0xaa, 0x50, 0x35, 0xef, 0x70, 0x09, 0x74,
	    0xe0, 0x2b, 0x12, 0x09, 0x44, 0xff, 0x80, 0x29, 0x74, 0xe0, 0x2b,
	    0xf8, 0xe6, 0xfe, 0x24, 0xd1, 0xf8, 0xe6, 0xd3, 0x9f, 0x40, 0x06,
	    0x74, 0xd1, 0x2e, 0xf8, 0xe6, 0xff, 0x12, 0x09, 0x1d, 0xd3, 0xe7,
	    0x95, 0x0a, 0x19, 0xe7, 0x95, 0x09, 0x40, 0x08, 0xeb, 0x25, 0xe0,
	    0x24, 0x9f, 0x12, 0x09, 0x06, 0x0b, 0xbb, 0x05, 0xc2, 0xef, 0x70,
	    0x06, 0xf5, 0x36, 0x75, 0x20, 0x8e, 0x22, 0x85, 0x0d, 0x0c, 0x85,
	    0x0e, 0x0b, 0xe4, 0xfb, 0x12, 0x08, 0xaa, 0x50, 0x2c, 0x74, 0x3b,
	    0x2b, 0xf8, 0xe6, 0xff, 0xe5, 0x0c, 0xd3, 0x9f, 0x40, 0x08, 0xe5,
	    0x0e, 0xd3, 0x9f, 0x50, 0x02, 0x80, 0x02, 0xaf, 0x0c, 0x8f, 0x0c,
	    0xe6, 0xff, 0xe5, 0x0b, 0xc3, 0x9f, 0x50, 0x08, 0xe5, 0x0d, 0xc3,
	    0x9f, 0x40, 0x02, 0x80, 0x02, 0xaf, 0x0b, 0x8f, 0x0b, 0x0b, 0xbb,
	    0x05, 0xcb, 0xe5, 0x0b, 0x65, 0x0e, 0x60, 0x4e, 0xe4, 0xfb, 0x12,
	    0x08, 0xaa, 0x50, 0x18, 0x74, 0x3b, 0x2b, 0xf8, 0xe6, 0xb5, 0x0b,
	    0x10, 0x12, 0x09, 0x1d, 0xe7, 0xb5, 0x0a, 0x09, 0x19, 0xe7, 0xb5,
	    0x09, 0x04, 0x8b, 0x4c, 0x80, 0x4a, 0x0b, 0xbb, 0x05, 0xdf, 0xe4,
	    0xfb, 0x12, 0x08, 0xaa, 0x50, 0x18, 0x74, 0x3b, 0x2b, 0xf8, 0xe6,
	    0xb5, 0x0b, 0x10, 0x12, 0x09, 0x1d, 0xe7, 0xb5, 0x0a, 0x09, 0x19,
	    0xe7, 0xb5, 0x09, 0x04, 0x8b, 0x4c, 0x80, 0x27, 0x0b, 0xbb, 0x05,
	    0xdf, 0xe5, 0x0b, 0x14, 0xf5, 0x0d, 0x02, 0x06, 0x22, 0xe4, 0xfb,
	    0x12, 0x08, 0xaa, 0x50, 0x10, 0x12, 0x09, 0x1d, 0xe7, 0xb5, 0x0a,
	    0x09, 0x19, 0xe7, 0xb5, 0x09, 0x04, 0x8b, 0x4c, 0x80, 0x04, 0x0b,
	    0xbb, 0x05, 0xe7, 0xe4, 0xfb, 0x12, 0x08, 0xaa, 0x50, 0x13, 0x74,
	    0xe0, 0x25, 0x4c, 0xf9, 0x74, 0xe0, 0x2b, 0xf8, 0xe6, 0x67, 0x60,
	    0x06, 0x74, 0x4d, 0x2b, 0xf8, 0x76, 0x03, 0x0b, 0xbb, 0x05, 0xe4,
	    0x74, 0xe0, 0x12, 0x09, 0x42, 0xf5, 0x36, 0x30, 0x0b, 0x04, 0x7f,
	    0xfe, 0x80, 0x02, 0x7f, 0x02, 0x12, 0x09, 0x77, 0xc3, 0x96, 0xf5,
	    0x36, 0x74, 0xd1, 0x25, 0x20, 0xf8, 0xa6, 0x36, 0x75, 0x20, 0x86,
	    0x22, 0x85, 0x3a, 0x52, 0x90, 0x30, 0x24, 0xe0, 0xf5, 0x46, 0xa3,
	    0xe0, 0xf5, 0x47, 0xa3, 0xe0, 0xf5, 0x48, 0xa3, 0xe0, 0xf5, 0x49,
	    0xa3, 0xe0, 0xf5, 0x38, 0xd2, 0x09, 0xe5, 0x52, 0x12, 0x04, 0xca,
	    0x07, 0x5f, 0x03, 0x07, 0x65, 0x07, 0x07, 0x77, 0x08, 0x08, 0x19,
	    0x12, 0x07, 0xf5, 0x80, 0x07, 0xf5, 0x81, 0x07, 0x95, 0x8f, 0x07,
	    0xbc, 0x90, 0x07, 0xbc, 0x91, 0x07, 0xbc, 0x92, 0x07, 0xbc, 0x93,
	    0x07, 0xbc, 0x94, 0x07, 0xd8, 0x98, 0x07, 0xed, 0x9f, 0x08, 0x2a,
	    0xec, 0x00, 0x00, 0x08, 0x48, 0xe4, 0xf5, 0x20, 0xd2, 0x0d, 0x22,
	    0x85, 0x4d, 0x46, 0x85, 0x4e, 0x47, 0x85, 0x4f, 0x48, 0x85, 0x50,
	    0x49, 0x85, 0x51, 0x38, 0x02, 0x08, 0x2d, 0x75, 0x20, 0x70, 0xc2,
	    0x0d, 0xe4, 0xf5, 0x40, 0x90, 0x0e, 0x33, 0x12, 0x08, 0x49, 0x90,
	    0x0e, 0x32, 0xe4, 0x12, 0x08, 0x49, 0xe4, 0xf5, 0x09, 0x12, 0x0b,
	    0xf8, 0x02, 0x08, 0x2d, 0x12, 0x09, 0x6f, 0x50, 0x03, 0x02, 0x08,
	    0x2d, 0x75, 0x20, 0x16, 0xe4, 0xf5, 0x4a, 0xf5, 0x4b, 0xf5, 0x38,
	    0xe5, 0x38, 0x12, 0x09, 0x32, 0x12, 0x04, 0xa5, 0x28, 0x1e, 0x28,
	    0x1e, 0x05, 0x38, 0xe5, 0x38, 0xb4, 0x05, 0xed, 0x80, 0x71, 0xe5,
	    0x20, 0x64, 0x16, 0x70, 0x6b, 0xaf, 0x49, 0xae, 0x48, 0xad, 0x47,
	    0xac, 0x46, 0xe5, 0x52, 0x25, 0xe0, 0x25, 0xe0, 0x24, 0xe2, 0xf8,
	    0x12, 0x04, 0x99, 0x80, 0x55, 0xe5, 0x20, 0x64, 0x16, 0x70, 0x4f,
	    0x85, 0x46, 0x3b, 0x85, 0x47, 0x3c, 0x85, 0x48, 0x3d, 0x85, 0x49,
	    0x3e, 0x85, 0x38, 0x3f, 0xe5, 0x20, 0x64, 0x16, 0x70, 0x3a, 0x80,
	    0x2c, 0x12, 0x09, 0x6f, 0x40, 0x33, 0xe5, 0x20, 0x64, 0x16, 0x60,
	    0x2d, 0x75, 0x20, 0x16, 0x12, 0x0d, 0xc9, 0xe5, 0x52, 0xb4, 0x81,
	    0x06, 0x85, 0x46, 0x4a, 0x85, 0x47, 0x4b, 0xe4, 0xf5, 0x09, 0x12,
	    0x0b, 0x6b, 0x80, 0x08, 0x12, 0x09, 0x6f, 0x40, 0x0f, 0x75, 0x20,
	    0x16, 0x75, 0x09, 0x01, 0x12, 0x0b, 0x6b, 0xd2, 0x08, 0x22, 0x12,
	    0x0e, 0x84, 0x90, 0x30, 0x24, 0xe5, 0x46, 0xf0, 0xa3, 0xe5, 0x47,
	    0xf0, 0xa3, 0xe5, 0x48, 0xf0, 0xa3, 0xe5, 0x49, 0xf0, 0xa3, 0xe5,
	    0x38, 0xf0, 0x90, 0x30, 0x23, 0xe4, 0xf0, 0x22, 0x93, 0xf5, 0x37,
	    0x75, 0x09, 0x02, 0x12, 0x0b, 0xf8, 0x22, 0xe5, 0x09, 0x25, 0xe0,
	    0x25, 0xe0, 0x24, 0x24, 0xf8, 0xe6, 0x75, 0x83, 0x00, 0xf5, 0x82,
	    0xe5, 0x09, 0x25, 0xe0, 0x25, 0xe0, 0x24, 0x25, 0xf8, 0xe6, 0xfd,
	    0x7c, 0x00, 0xaf, 0x82, 0x7e, 0x00, 0x12, 0x02, 0xce, 0x8e, 0x83,
	    0x8f, 0x82, 0xe5, 0x82, 0x45, 0x83, 0x22, 0xf8, 0xa6, 0x07, 0xeb,
	    0x25, 0xe0, 0x25, 0xe0, 0x24, 0x25, 0xf8, 0xe6, 0xff, 0xeb, 0x25,
	    0xe0, 0x25, 0xe0, 0x22, 0x12, 0x04, 0x76, 0xe5, 0x49, 0x2f, 0xf5,
	    0x49, 0xe5, 0x48, 0x3e, 0xf5, 0x48, 0xe5, 0x47, 0x3d, 0xf5, 0x47,
	    0xe5, 0x46, 0x3c, 0xf5, 0x46, 0x22, 0x74, 0x4d, 0x2b, 0xf8, 0xe6,
	    0xd3, 0x94, 0x00, 0x22, 0xee, 0x75, 0xf0, 0x0a, 0xa4, 0x24, 0x6d,
	    0xf8, 0x22, 0x8f, 0x82, 0x8e, 0x83, 0x75, 0xf0, 0x04, 0xed, 0x02,
	    0x04, 0xbe, 0x74, 0x4d, 0x2f, 0xf8, 0xe6, 0xd3, 0x94, 0x00, 0x22,
	    0xe9, 0x24, 0x01, 0xfd, 0xe4, 0x33, 0xfc, 0xee, 0xfb, 0xc3, 0xed,
	    0x9b, 0x74, 0x80, 0xf8, 0x6c, 0x98, 0x22, 0x12, 0x03, 0x35, 0x8f,
	    0x0d, 0x8e, 0x0c, 0x8d, 0x0b, 0x8c, 0x0a, 0x22, 0xef, 0x25, 0xe0,
	    0x28, 0xf8, 0xe6, 0xfc, 0x08, 0xe6, 0xfd, 0x74, 0x68, 0x2f, 0xf8,
	    0x22, 0x8f, 0x0d, 0x8e, 0x0c, 0x8d, 0x0b, 0x8c, 0x0a, 0x22, 0xf8,
	    0xe6, 0xf5, 0x09, 0x08, 0xe6, 0xf5, 0x0a, 0x22, 0xef, 0x75, 0xf0,
	    0x0a, 0xa4, 0x24, 0x6e, 0xf8, 0xeb, 0x25, 0xe0, 0x28, 0xf9, 0x22,
	    0xeb, 0x25, 0xe0, 0x24, 0xa0, 0xf9, 0x22, 0xf8, 0xe6, 0xf9, 0xd3,
	    0x9d, 0xec, 0x64, 0x80, 0xf8, 0x74, 0x80, 0x98, 0x22, 0xeb, 0x25,
	    0xe0, 0x25, 0xe0, 0x24, 0x22, 0xf8, 0x22, 0x78, 0xdb, 0xe6, 0x25,
	    0x36, 0xf5, 0x36, 0x22, 0x25, 0x4c, 0xf8, 0xe6, 0x24, 0xd1, 0xf8,
	    0xe6, 0x22, 0xc3, 0xe5, 0x10, 0x9f, 0xf5, 0x10, 0xe5, 0x0f, 0x9e,
	    0xf5, 0x0f, 0x22, 0xc3, 0xe5, 0x12, 0x9f, 0xf5, 0x12, 0xe5, 0x11,
	    0x9e, 0xf5, 0x11, 0x22, 0x75, 0xf0, 0x08, 0xa4, 0x24, 0x8b, 0xf8,
	    0xe6, 0xfe, 0x08, 0xe6, 0x22, 0xe5, 0x20, 0x54, 0x7f, 0xc3, 0x94,
	    0x10, 0x22, 0x78, 0xdb, 0xa6, 0x07, 0xc3, 0xe5, 0x36, 0x96, 0xf5,
	    0x36, 0x22, 0xe0, 0xa3, 0xe0, 0x75, 0xf0, 0x02, 0xa4, 0xff, 0xae,
	    0xf0, 0x22, 0x25, 0x0e, 0xf8, 0xe6, 0xff, 0xe4, 0xfc, 0xfd, 0xfe,
	    0x22, 0xc2, 0xaf, 0x75, 0x89, 0x03, 0x75, 0xa8, 0x07, 0x75, 0xb8,
	    0x04, 0x75, 0x09, 0xff, 0x75, 0x0a, 0x0e, 0x75, 0x0b, 0x02, 0x75,
	    0x0c, 0x09, 0x12, 0x0f, 0x66, 0xd2, 0xaf, 0x75, 0x09, 0xff, 0x75,
	    0x0a, 0x0e, 0x75, 0x0b, 0x26, 0x75, 0x0c, 0x03, 0x12, 0x0f, 0x66,
	    0x12, 0x0d, 0xc9, 0xe4, 0xf5, 0x09, 0x12, 0x0b, 0x6b, 0x75, 0x09,
	    0x01, 0x12, 0x0b, 0x6b, 0x12, 0x00, 0x16, 0xc2, 0x08, 0xd2, 0x09,
	    0x30, 0x0e, 0x05, 0xc2, 0x0e, 0x12, 0x07, 0x0e, 0x30, 0x08, 0x15,
	    0xe5, 0x20, 0xb4, 0x16, 0x0e, 0x12, 0x0a, 0xab, 0x12, 0x00, 0x16,
	    0x75, 0x20, 0x70, 0x90, 0x30, 0x23, 0xe4, 0xf0, 0xc2, 0x08, 0x20,
	    0x0c, 0x03, 0x02, 0x0a, 0x9b, 0xc2, 0x0d, 0x30, 0x07, 0x05, 0xc2,
	    0x07, 0x02, 0x0a, 0x97, 0xe5, 0x20, 0x70, 0x05, 0x12, 0x0f, 0xa6,
	    0x80, 0x71, 0x74, 0x05, 0xd3, 0x95, 0x20, 0x40, 0x02, 0x80, 0x17,
	    0xe5, 0x20, 0xb4, 0x05, 0x0b, 0x14, 0xf5, 0x09, 0x12, 0x0d, 0x64,
	    0x12, 0x04, 0xf0, 0x80, 0x58, 0x74, 0x0a, 0xd3, 0x95, 0x20, 0x40,
	    0x0b, 0x12, 0x0d, 0xf4, 0x12, 0x0a, 0xa4, 0xe5, 0x20, 0x14, 0x80,
	    0x2e, 0xe5, 0x20, 0xb4, 0x0a, 0x15, 0x14, 0xf5, 0x09, 0x12, 0x0d,
	    0x64, 0x12, 0x0f, 0x1e, 0x12, 0x0a, 0xa4, 0x90, 0x0e, 0x34, 0xe4,
	    0x93, 0xf5, 0x37, 0x80, 0x41, 0x74, 0x0d, 0xd3, 0x95, 0x20, 0x40,
	    0x16, 0x12, 0x0f, 0xe0, 0x75, 0x09, 0x02, 0x12, 0x0b, 0xf8, 0xe5,
	    0x20, 0x24, 0xf5, 0xf5, 0x09, 0x12, 0x0d, 0x64, 0x05, 0x20, 0x80,
	    0x24, 0xe5, 0x20, 0xb4, 0x0d, 0x12, 0x24, 0xf5, 0xf5, 0x09, 0x12,
	    0x0d, 0x64, 0x12, 0x0c, 0x7b, 0x75, 0x09, 0x02, 0x12, 0x0b, 0xf8,
	    0x80, 0x0d, 0xe5, 0x20, 0xb4, 0x0e, 0x08, 0x12, 0x0f, 0xf2, 0x90,
	    0x30, 0x23, 0xe4, 0xf0, 0xc2, 0x0c, 0xd2, 0x0d, 0x90, 0x30, 0x29,
	    0xe5, 0x20, 0xf0, 0x02, 0x09, 0xd8, 0x75, 0x09, 0x02, 0x12, 0x0b,
	    0xf8, 0x22, 0xe4, 0x75, 0x0d, 0xff, 0x75, 0x0c, 0xff, 0xf5, 0x0b,
	    0xf5, 0x0a, 0xf5, 0x09, 0x74, 0x3b, 0x25, 0x09, 0xf8, 0xe6, 0x60,
	    0x16, 0x12, 0x08, 0x53, 0x60, 0x11, 0xc3, 0xe5, 0x82, 0x95, 0x0d,
	    0xe5, 0x83, 0x95, 0x0c, 0x50, 0x06, 0x85, 0x83, 0x0c, 0x85, 0x82,
	    0x0d, 0x05, 0x09, 0xe5, 0x09, 0xb4, 0x05, 0xdb, 0xe4, 0x7f, 0x01,
	    0xfe, 0xfd, 0xfc, 0xab, 0x0d, 0xaa, 0x0c, 0xa9, 0x0b, 0xa8, 0x0a,
	    0xc3, 0x12, 0x04, 0x52, 0x50, 0x0a, 0xe4, 0x75, 0x0d, 0x01, 0xf5,
	    0x0c, 0xf5, 0x0b, 0xf5, 0x0a, 0xaf, 0x0d, 0xae, 0x0c, 0xad, 0x0b,
	    0xac, 0x0a, 0xe4, 0x7b, 0x80, 0xfa, 0xf9, 0xf8, 0x12, 0x03, 0x35,
	    0x8f, 0x0d, 0x8e, 0x0c, 0x8d, 0x0b, 0x8c, 0x0a, 0xe4, 0xf5, 0x09,
	    0x74, 0x3b, 0x25, 0x09, 0xf8, 0xe6, 0x70, 0x02, 0x80, 0x2f, 0x12,
	    0x08, 0x53, 0x70, 0x09, 0x74, 0x41, 0x25, 0x09, 0xf8, 0x76, 0x80,
	    0x80, 0x33, 0xab, 0x82, 0xaa, 0x83, 0xe4, 0xf9, 0xf8, 0xaf, 0x0d,
	    0xae, 0x0c, 0xad, 0x0b, 0xac, 0x0a, 0x12, 0x03, 0xc0, 0x8e, 0x83,
	    0x8f, 0x82, 0xc3, 0xe5, 0x82, 0x94, 0x01, 0xe5, 0x83, 0x94, 0x00,
	    0x50, 0x09, 0x74, 0x41, 0x25, 0x09, 0xf8, 0x76, 0x01, 0x80, 0x09,
	    0xaf, 0x82, 0x74, 0x41, 0x25, 0x09, 0xf8, 0xa6, 0x07, 0x05, 0x09,
	    0xe5, 0x09, 0x64, 0x05, 0x70, 0xad, 0x22, 0xe4, 0xfb, 0xe5, 0x09,
	    0x70, 0x2d, 0xeb, 0x25, 0xe0, 0x25, 0xe0, 0x24, 0x65, 0xf5, 0x82,
	    0xe4, 0x34, 0x0e, 0xf5, 0x83, 0x12, 0x04, 0x89, 0x12, 0x09, 0x31,
	    0x12, 0x04, 0x99, 0x12, 0x09, 0x31, 0xe5, 0x4a, 0x26, 0xf6, 0xeb,
	    0x25, 0xe0, 0x25, 0xe0, 0x24, 0x23, 0xf8, 0xe5, 0x4b, 0x26, 0xf6,
	    0x02, 0x0b, 0xee, 0xe5, 0x09, 0x64, 0x01, 0x70, 0x4a, 0xeb, 0x25,
	    0xe0, 0x25, 0xe0, 0x24, 0x24, 0x12, 0x08, 0x89, 0x24, 0x22, 0xf8,
	    0xe6, 0xc3, 0x9f, 0x12, 0x08, 0x8b, 0x24, 0x6d, 0x12, 0x08, 0x7f,
	    0x24, 0x23, 0xf8, 0xe6, 0xc3, 0x9f, 0x12, 0x08, 0x8b, 0x24, 0x6e,
	    0xf8, 0xa6, 0x07, 0xeb, 0x25, 0xe0, 0x25, 0xe0, 0x24, 0x24, 0x12,
	    0x08, 0x89, 0x24, 0x22, 0xf8, 0xe6, 0x2f, 0x12, 0x08, 0x8b, 0x24,
	    0x6f, 0x12, 0x08, 0x7f, 0x24, 0x23, 0xf8, 0xe6, 0x2f, 0x12, 0x08,
	    0x8b, 0x24, 0x70, 0xf8, 0xa6, 0x07, 0x0b, 0xeb, 0x64, 0x05, 0x60,
	    0x03, 0x02, 0x0b, 0x6d, 0x22, 0xe5, 0x09, 0x60, 0x68, 0xd3, 0x94,
	    0x01, 0x40, 0x08, 0xe5, 0x36, 0x90, 0x0e, 0x3c, 0x93, 0xf5, 0x40,
	    0x90, 0x0e, 0x38, 0xe4, 0x93, 0xfe, 0x74, 0x01, 0x93, 0xff, 0xc3,
	    0x90, 0x0e, 0x36, 0x74, 0x01, 0x93, 0x9f, 0xff, 0xe4, 0x93, 0x9e,
	    0xfe, 0xe4, 0x8f, 0x0d, 0x8e, 0x0c, 0xf5, 0x0b, 0xf5, 0x0a, 0xab,
	    0x0d, 0xaa, 0x0c, 0xa9, 0x0b, 0xa8, 0x0a, 0xaf, 0x40, 0xfc, 0xfd,
	    0xfe, 0x12, 0x03, 0x35, 0x12, 0x08, 0xfd, 0xe4, 0x7b, 0xff, 0xfa,
	    0xf9, 0xf8, 0x12, 0x03, 0xc0, 0x12, 0x08, 0xfd, 0x78, 0x04, 0x12,
	    0x04, 0x76, 0x12, 0x08, 0xfd, 0xe5, 0x0d, 0x45, 0x37, 0xf5, 0x0d,
	    0xe5, 0x0c, 0xf5, 0x0c, 0xe5, 0x0b, 0xf5, 0x0b, 0xe5, 0x0a, 0xf5,
	    0x0a, 0x80, 0x0c, 0xe4, 0xf5, 0x0d, 0x75, 0x0c, 0x80, 0xf5, 0x0b,
	    0xf5, 0x0a, 0xf5, 0x36, 0x90, 0x36, 0x02, 0xe5, 0x0d, 0xf0, 0xa3,
	    0xe5, 0x0c, 0xf0, 0x22, 0xe4, 0xf5, 0x0d, 0xf5, 0x0e, 0x75, 0x0f,
	    0x03, 0x12, 0x0e, 0xd6, 0xe4, 0xf5, 0x0c, 0xf5, 0x0b, 0xff, 0x12,
	    0x08, 0xc7, 0x50, 0x10, 0xef, 0x65, 0x4c, 0x60, 0x0b, 0x05, 0x0c,
	    0x74, 0x68, 0x2f, 0xf8, 0xe6, 0x25, 0x0b, 0xf5, 0x0b, 0x0f, 0xbf,
	    0x05, 0xe7, 0xe5, 0x0c, 0xc3, 0x13, 0x25, 0x0b, 0xf5, 0x0b, 0x85,
	    0x0c, 0xf0, 0x84, 0xf5, 0x0b, 0xfe, 0x24, 0x01, 0xfd, 0xe4, 0x33,
	    0xfc, 0x74, 0x68, 0x25, 0x4c, 0x12, 0x09, 0x24, 0x50, 0x05, 0x12,
	    0x08, 0xd0, 0x50, 0x02, 0xae, 0x01, 0xe4, 0xff, 0x12, 0x08, 0xc7,
	    0x50, 0x1a, 0xee, 0x24, 0x01, 0xfd, 0xe4, 0x33, 0xfc, 0x74, 0x68,
	    0x2f, 0x12, 0x09, 0x24, 0x50, 0x05, 0x12, 0x08, 0xd0, 0x50, 0x06,
	    0x74, 0x4d, 0x2f, 0xf8, 0x76, 0x05, 0x0f, 0xbf, 0x05, 0xdd, 0x74,
	    0xd1, 0x2e, 0xf8, 0xe6, 0xf5, 0x36, 0x75, 0x20, 0x8e, 0x22, 0xc0,
	    0xe0, 0xc0, 0x83, 0xc0, 0x82, 0x90, 0x3f, 0x0c, 0xe0, 0xf5, 0x08,
	    0xe5, 0x08, 0x30, 0xe3, 0x37, 0x30, 0x0d, 0x34, 0x90, 0x60, 0x19,
	    0xe0, 0xf5, 0x54, 0xa3, 0xe0, 0xf5, 0x55, 0x90, 0x60, 0x21, 0xe0,
	    0xf5, 0x56, 0xa3, 0xe0, 0xf5, 0x57, 0x90, 0x60, 0x29, 0xe0, 0xf5,
	    0x58, 0xa3, 0xe0, 0xf5, 0x59, 0x90, 0x60, 0x31, 0xe0, 0xf5, 0x5a,
	    0xa3, 0xe0, 0xf5, 0x5b, 0x90, 0x60, 0x39, 0xe0, 0xf5, 0x5c, 0xa3,
	    0xe0, 0xf5, 0x5d, 0xd2, 0x0c, 0xe5, 0x08, 0x30, 0xe1, 0x10, 0x30,
	    0x09, 0x0d, 0x90, 0x30, 0x22, 0xe0, 0x75, 0x39, 0x00, 0xf5, 0x3a,
	    0xe4, 0xf0, 0xd2, 0x0e, 0x90, 0x3f, 0x0c, 0xe5, 0x08, 0xf0, 0xd0,
	    0x82, 0xd0, 0x83, 0xd0, 0xe0, 0x32, 0xe4, 0xf5, 0x0e, 0xe5, 0x0e,
	    0x25, 0xe0, 0x24, 0x54, 0xf8, 0xe6, 0xfe, 0x08, 0xe6, 0xff, 0xe4,
	    0x8f, 0x0d, 0x8e, 0x0c, 0xf5, 0x0b, 0xf5, 0x0a, 0xab, 0x0d, 0xaa,
	    0x0c, 0xa9, 0x0b, 0xa8, 0x0a, 0xc0, 0x00, 0x74, 0x3b, 0x12, 0x09,
	    0x8d, 0xd0, 0x00, 0x12, 0x08, 0xe2, 0xab, 0x0d, 0xaa, 0x0c, 0xa9,
	    0x0b, 0xa8, 0x0a, 0xc0, 0x00, 0x74, 0x41, 0x12, 0x09, 0x8d, 0xd0,
	    0x00, 0x12, 0x08, 0xe2, 0xe4, 0x7b, 0x80, 0xfa, 0xf9, 0xf8, 0x12,
	    0x03, 0xc0, 0x12, 0x08, 0xe5, 0xe5, 0x09, 0x12, 0x08, 0xb4, 0xe5,
	    0x0e, 0x25, 0xe0, 0x28, 0xf8, 0xa6, 0x0c, 0x08, 0xa6, 0x0d, 0x05,
	    0x0e, 0xe5, 0x0e, 0x64, 0x05, 0x70, 0x9f, 0x22, 0x90, 0x0e, 0x63,
	    0xe4, 0x93, 0xf5, 0x4a, 0xa3, 0xe4, 0x93, 0xf5, 0x4b, 0xe4, 0xff,
	    0xef, 0x90, 0x0e, 0x79, 0x93, 0xfe, 0x74, 0x3b, 0x2f, 0xf8, 0xa6,
	    0x06, 0xef, 0x90, 0x0e, 0x7e, 0x93, 0xfe, 0x74, 0x41, 0x2f, 0xf8,
	    0xa6, 0x06, 0x0f, 0xbf, 0x05, 0xe4, 0x22, 0x12, 0x09, 0x3a, 0x74,
	    0xd1, 0x25, 0x20, 0xf8, 0xa6, 0x36, 0x22, 0x00, 0x56, 0x40, 0x30,
	    0x04, 0x20, 0xdf, 0x30, 0x05, 0x40, 0xbf, 0x50, 0x25, 0x04, 0xfb,
	    0x60, 0x00, 0x11, 0x00, 0x3f, 0x05, 0x30, 0x00, 0x3f, 0x06, 0x22,
	    0x00, 0x3f, 0x01, 0x29, 0x00, 0x3f, 0x02, 0x00, 0x00, 0x3f, 0x0b,
	    0x0f, 0xf0, 0x30, 0x01, 0x40, 0xbf, 0x30, 0x01, 0x00, 0xbf, 0x30,
	    0x29, 0x7e, 0x00, 0x00, 0x02, 0x04, 0x06, 0x03, 0x66, 0x00, 0x00,
	    0x00, 0x24, 0x1e, 0x23, 0x28, 0x2d, 0x32, 0x37, 0x3c, 0x41, 0x46,
	    0x4b, 0x50, 0x55, 0x5a, 0x5f, 0x64, 0x69, 0x6e, 0x73, 0x78, 0x7e,
	    0x84, 0x8a, 0x90, 0x96, 0x9c, 0xa3, 0xaa, 0xb1, 0xb8, 0xbf, 0xc6,
	    0xcd, 0xd5, 0xde, 0xe8, 0xf3, 0xff, 0x50, 0x3c, 0x20, 0x18, 0x08,
	    0x09, 0x08, 0x03, 0x04, 0x06, 0x04, 0x06, 0x08, 0x06, 0x08, 0x06,
	    0x0c, 0x06, 0x04, 0x06, 0x08, 0x03, 0x08, 0x03, 0x04, 0x04, 0x08,
	    0x04, 0x04, 0x80, 0x80, 0x80, 0x80, 0x80, 0x10, 0xe5, 0x49, 0x24,
	    0xf2, 0xf5, 0x0c, 0xe5, 0x48, 0x34, 0x43, 0xf5, 0x0b, 0xe5, 0x47,
	    0x34, 0xa2, 0xf5, 0x0a, 0xe5, 0x46, 0x34, 0x28, 0xf5, 0x09, 0x85,
	    0x0c, 0x46, 0xe5, 0x0c, 0x54, 0xa0, 0xff, 0xe5, 0x0b, 0xfe, 0xe4,
	    0xfd, 0xfc, 0x78, 0x07, 0x12, 0x04, 0x63, 0x78, 0x10, 0x12, 0x08,
	    0x92, 0xe4, 0xff, 0xfe, 0xe5, 0x0a, 0xfd, 0xe4, 0xfc, 0x78, 0x0e,
	    0x12, 0x04, 0x63, 0x12, 0x08, 0x95, 0xe4, 0xff, 0xfe, 0xfd, 0xe5,
	    0x09, 0xfc, 0x78, 0x18, 0x12, 0x04, 0x63, 0x78, 0x08, 0x12, 0x08,
	    0x92, 0x22, 0xe4, 0xff, 0x74, 0x68, 0x2f, 0xf8, 0xe4, 0xf6, 0x12,
	    0x08, 0xc7, 0x50, 0x34, 0xe5, 0x0d, 0x12, 0x08, 0xb4, 0x12, 0x08,
	    0xee, 0xe4, 0xf6, 0xae, 0x0d, 0xee, 0xc3, 0x95, 0x0f, 0xe4, 0x95,
	    0x0e, 0x50, 0x1f, 0x12, 0x08, 0xb3, 0xef, 0x25, 0xe0, 0x28, 0xf8,
	    0xe6, 0xfa, 0x08, 0xe6, 0xfb, 0xd3, 0xed, 0x9b, 0xec, 0x9a, 0x50,
	    0x08, 0x12, 0x08, 0xb3, 0x12, 0x08, 0xee, 0xa6, 0x06, 0x0e, 0x80,
	    0xd8, 0x0f, 0xef, 0x64, 0x05, 0x70, 0xbb, 0x22, 0x75, 0x0d, 0x05,
	    0x75, 0x0e, 0x00, 0x75, 0x0f, 0x0a, 0x12, 0x0e, 0xd6, 0xe4, 0xff,
	    0x12, 0x08, 0xc7, 0x50, 0x13, 0x74, 0x68, 0x25, 0x4c, 0xf9, 0x74,
	    0x68, 0x2f, 0xf8, 0xe6, 0x67, 0x60, 0x06, 0x74, 0x4d, 0x2f, 0xf8,
	    0x76, 0x04, 0x0f, 0xbf, 0x05, 0xe4, 0x74, 0x68, 0x12, 0x09, 0x42,
	    0xf5, 0x36, 0x30, 0x0b, 0x04, 0x7f, 0x01, 0x80, 0x02, 0x7f, 0xff,
	    0x12, 0x09, 0x77, 0x74, 0xc7, 0x25, 0x20, 0xf8, 0xa6, 0x36, 0x75,
	    0x20, 0x8b, 0x22, 0xae, 0x0a, 0xaf, 0x0b, 0xe4, 0xfd, 0xed, 0xc3,
	    0x95, 0x0c, 0x50, 0x33, 0x12, 0x08, 0xbc, 0xe4, 0x93, 0xf5, 0x0d,
	    0x74, 0x01, 0x93, 0xf5, 0x0e, 0x45, 0x0d, 0x60, 0x23, 0x85, 0x0e,
	    0x82, 0x85, 0x0d, 0x83, 0xe0, 0xfc, 0x12, 0x08, 0xbc, 0x74, 0x03,
	    0x93, 0x52, 0x04, 0x12, 0x08, 0xbc, 0x74, 0x02, 0x93, 0x42, 0x04,
	    0x85, 0x0e, 0x82, 0x85, 0x0d, 0x83, 0xec, 0xf0, 0x0d, 0x80, 0xc7,
	    0x22, 0xe5, 0x40, 0xc3, 0x94, 0x69, 0x50, 0x02, 0x80, 0x01, 0xc3,
	    0x92, 0x0b, 0x90, 0x0e, 0x33, 0xe4, 0x93, 0xf5, 0x37, 0x30, 0x0b,
	    0x04, 0x7f, 0x06, 0x80, 0x02, 0x7f, 0xfa, 0x78, 0xdb, 0xa6, 0x07,
	    0x30, 0x0b, 0x05, 0x90, 0x0e, 0x3a, 0x80, 0x03, 0x90, 0x0e, 0x3b,
	    0xe4, 0x93, 0xff, 0x8f, 0x36, 0x12, 0x09, 0x3a, 0x78, 0xd1, 0xf6,
	    0x75, 0x20, 0x81, 0x22, 0x90, 0x0e, 0x35, 0xe4, 0x93, 0xf5, 0x37,
	    0x12, 0x09, 0x3a, 0x74, 0xc7, 0x25, 0x20, 0xf8, 0xa6, 0x36, 0x22,
	    0x75, 0x20, 0x10, 0x22
};

#endif /* __OV5640_H__ */
