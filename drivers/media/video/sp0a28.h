/***********************************************************************
* Driver for SP0A28 (0.3MP Camera)
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
***********************************************************************/
#ifndef __SP0A28_H__
#define __SP0A28_H__

#define ENABLE_COLOR_PATTERN 0

#define SP0A28_SATURATION_MIN			0
#define SP0A28_SATURATION_MAX			200
#define SP0A28_SATURATION_STEP          100
#define SP0A28_SATURATION_DEF			100

#define SP0A28_SHARPNESS_MIN			0
#define SP0A28_SHARPNESS_MAX			200
#define SP0A28_SHARPNESS_STEP           100
#define SP0A28_SHARPNESS_DEF			100


#define Pre_Value_P0_0xdd	0x70//0x80
#define Pre_Value_P0_0xde	0x90//0x80

//sharpness                          
#define Pre_Value_P1_0xe8	0x20//0x20//0x20 //;sharp_fac_pos_outdoor 
#define Pre_Value_P1_0xec	0x30//0x30//0x30 //;sharp_fac_neg_outdoor   
#define Pre_Value_P1_0xe9	0x10//0x0a//0x10 //;sharp_fac_pos_nr 
#define Pre_Value_P1_0xed	0x30//0x10//0x30 //;sharp_fac_neg_nr 
#define Pre_Value_P1_0xea	0x10//0x10 //;sharp_fac_pos_dummy
#define Pre_Value_P1_0xef	0x20//0x20 //;sharp_fac_neg_dummy
#define Pre_Value_P1_0xeb	0x0c//0x10 //;sharp_fac_pos_low
#define Pre_Value_P1_0xf0	0x18//0x20 //;sharp_fac_neg_low 

//saturation
#define Pre_Value_P0_0xd3	0x80//0x90
#define Pre_Value_P0_0xd4	0x6c//0x90
#define Pre_Value_P0_0xd6	0x58//0x70 
#define Pre_Value_P0_0xd7	0x40//0x60

#define Pre_Value_P0_0xd8	0x80//0x90
#define Pre_Value_P0_0xd9	0x6c//0x90
#define Pre_Value_P0_0xda	0x58//70
#define Pre_Value_P0_0xdb	0x40//60
//Ae target
#define Pre_Value_P0_0xf7	0x78//0x78
#define Pre_Value_P0_0xf8	0x70//0x70
#define Pre_Value_P0_0xf9	0x6c//0x78 
#define Pre_Value_P0_0xfa	0x64//0x70 



/**
 *struct sp0a28_reg - sp0a28 register format
 *@reg: 16-bit offset to register
 *@val: 8/16/32-bit register value
 *@length: length of the register
 *
 * Define a structure for SP0A28 register initialization values
 */
struct sp0a28_reg {
	u8 reg;
	u8 val;
};



static const struct sp0a28_reg configscript_common1[] ={
	//;20120209rpc max outdoorP1:0x9c=0x1e¡ê?¡¤??¨°¨®D??¦Ì¡Â???¨®¡ê?
	//;20120208DT??AWB P1:0x1a,0x1b¡ê?¡¤??¨°F?¡éD65¦Ì¡Â?¨²2?1y¨¤¡ä¡ê?
	//;20120208DT??HEQ 0xdd=0x60¡ê?¡¤??¨°????¨¬?¨¢¨¢
	//;20120216DT???¡ê?a2?¨ºy¡ê?¡Á?D???¨°?
	//;20120326?¦Ì¦Ì¨ª¡Á?¡ä¨®??¨°?¦Ì?0x60¡ê?¡¤¨¤?1¦Ì¨ª???¨¨¨º¨²¨¬???¨¦¨´
	//;20120326??AE settingo¨ªStatus2?¡¤?2?¨ºy¨¬¨¢?¡ã¦Ì?LSC???¡ã¡ê?¡¤¨¤?1¨¦?¦Ì?¡Á¨®¡À?¨®Do¨²¨¬?
	//;20120621DT??????¡ê?¨¨??¡¥¡ê?gamma¡ê?sat¡ê?heq,atolum ???¨®¨°?¡Á¨¦?¡ã¨¦?AWB2?¨ºy
	//;20120724 DT??0x21?a0x36¡ê?DT?y??¨¢¨¢???¡¥?¦Ì¦Ì??¨º¨¬a,¨¨£¤¦Ì?p1:0x10
	//;20120731 DT??p0:0x16?a0x08¡ê?DT?y¨¢¨¢???¨º¨¬a
	//;20120814 DT??p0:0x21?a0x34¡ê??¨²¡ä?¦Ì?sensor??¨¨Y
	//;20121128 ¨º1?¨¹DP?¡é???¨®DP?¨¤1?2?¨ºy
	//;20130114 DT??p0:0x13?a0xf0,0x14?a0x30¡ê????¨®blacklevel¡ê?DT??p0¡êo0xde,0xf4,p1:0x0a

	//[Sensor]
	{0xfd, 0x01},
	{0x7c, 0x6c},
	{0xfd, 0x00},
	{0x1C, 0x00},
	{0xfd, 0x01},
	{0x28, 0xc4},
	{0x29, 0x9e},
	{0xfd, 0x00},
	{0x32, 0x00},
	{0x0e, 0x00},
	{0x0f, 0x40},
	{0x10, 0x40},
	{0x11, 0x10},
	{0x12, 0xa0},
	{0x13, 0xf0},
	{0x14, 0x30},
	{0x15, 0x00},
	{0x16, 0x08},
	{0x1A, 0x37},
	{0x1B, 0x17},
	{0x1C, 0x2f},
	{0x1d, 0x00},
	{0x1E, 0x57},
	{0x21, 0x34},//;36¡ê?2f
	{0x22, 0x12},
	{0x24, 0x80},
	{0x25, 0x02},
	{0x26, 0x03},
	{0x27, 0xeb},
	{0x28, 0x5f},
	{0x2f, 0x01},
	{0x5f, 0x02},
	{0xfb, 0x33},
	{0xf4, 0x09},
	{0xe7, 0x03},
	{0xe7, 0x00},
	//blacklevel
	{0x65, 0x18},
	{0x66, 0x18},
	{0x67, 0x18},
	{0x68, 0x18},
	//;ae setting
	//26M 50hz 7-14fps    
	{0xfd, 0x00},
	{0x03, 0x00},
	{0x04, 0xd2},
	{0x05, 0x00},
	{0x06, 0x00},
	{0x09, 0x03},
	{0x0a, 0xe5},
	{0xf0, 0x46},
	{0xf1, 0x00},
	{0xfd, 0x01},
	{0x90, 0x0e},
	{0x92, 0x01},
	{0x98, 0x46},
	{0x99, 0x00},
	{0x9a, 0x01},
	{0x9b, 0x00},
	//Status  
	{0xfd, 0x01},
	{0xc4, 0x6c},
	{0xc5, 0x7c},
	{0xca, 0x30},
	{0xcb, 0x45},
	{0xcc, 0x60},
	{0xcd, 0x60},
	{0xfd, 0x01},
	{0xce, 0xd4},
	{0xcf, 0x03},
	{0xd0, 0xd4},
	{0xd1, 0x03},
	{0xfd, 0x00},
	//DP
	{0xfd, 0x00},
	{0x45, 0x00},
	{0x46, 0x99},
	{0x79, 0xff},
	{0x7a, 0xff},
	{0x7b, 0x10},
	{0x7c, 0x10},

	//;lsc	for SX5044module
	{0xfd, 0x01},
	{0x35, 0x0e},
	{0x36, 0x14},
	{0x37, 0x20},
	{0x38, 0x1c},
	{0x39, 0x09},
	{0x3a, 0x10},
	{0x3b, 0x19},
	{0x3c, 0x1a},
	{0x3d, 0x08},
	{0x3e, 0x10},
	{0x3f, 0x14},
	{0x40, 0x22},
	{0x41, 0x0a},
	{0x42, 0x00},
	{0x43, 0x0a},
	{0x44, 0xfc},
	{0x45, 0x00},
	{0x46, 0xfe},
	{0x47, 0x00},
	{0x48, 0xf8},
	{0x49, 0x00},
	{0x4a, 0xf8},
	{0x4b, 0x00},
	{0x4c, 0xf2},
	{0xfd, 0x00},
	{0xa1, 0x20},
	{0xa2, 0x20},
	{0xa3, 0x20},
	{0xa4, 0xff},
	   
	//;smooth
	{0xfd, 0x01},
	{0xde, 0x0f},	
	{0xfd, 0x00},
	//	;¦Ì£¤¨ª¡§¦Ì¨¤???????D?¦Ì	
	{0x57, 0x04}, //04;raw_dif_thr_outdoor
	{0x58, 0x12}, //0a;raw_dif_thr_normal
	{0x56, 0x12}, //10;raw_dif_thr_dummy
	{0x59, 0x18}, //10;raw_dif_thr_lowlight
		//;GrGb?????D?¦Ì
	{0x89, 0x04}, //04;raw_grgb_thr_outdoor 
	{0x8a, 0x0a}, //0a//;raw_grgb_thr_normal  
	{0x9c, 0x10}, //10;raw_grgb_thr_dummy	 
	{0x9d, 0x15},//10 //;raw_grgb_thr_lowlight
		//;Gr\Gb???????????¨¨
	{0x81, 0xe0}, //    ;raw_gflt_fac_outdoor
	{0x82, 0xa0}, // a0;80;raw_gflt_fac_normal
	{0x83, 0x80}, //80//    ;raw_gflt_fac_dummy
	{0x84, 0x80}, //80//    ;raw_gflt_fac_lowlight
	  //;Gr?¡éGb¦Ì£¤¨ª¡§¦Ì¨¤?¨²???????¨¨  
	{0x85, 0xe0}, // ;raw_gf_fac_outdoor  
	{0x86, 0xa0}, // ;raw_gf_fac_normal	
	{0x87, 0x80}, //80 ;raw_gf_fac_dummy	
	{0x88, 0x80}, // 80;raw_gf_fac_lowlight
	  //;R?¡éB???????¨¨  
	{0x5a, 0xff}, //  ;raw_rb_fac_outdoor
	{0x5b, 0xc0}, //;raw_rb_fac_normal
	{0x5c, 0xa0}, //a0  ;raw_rb_fac_dummy
	{0x5d, 0x80}, // a0 ;raw_rb_fac_lowlight
	  //;adt ?????D?¦Ì¡Á?¨º¨º¨®|
	{0xa7, 0xff}, 
	{0xa8, 0xff},
	{0xa9, 0xff}, 
	{0xaa, 0xff}, 
	
	//;dem_morie_thr ¨¨£¤?|????
	{0x9e, 0x10},
	
	//;sharpen 
	{0xfd, 0x01}, //
	{0xdf, 0x0f},/////////////////////////
	{0xe2, 0x30}, // ;sharpen_y_base
	{0xe4, 0xa0}, // ;sharpen_y_max
	
	{0xe5, 0x08}, //0x08 ;rangek_neg_outdoor
	{0xd3, 0x10}, //0x10 ;rangek_pos_outdoor   
	{0xd7, 0x08}, //0x08 ;range_base_outdoor   
	
	{0xe6, 0x08}, //0x08 ;rangek_neg_normal
	{0xd4, 0x10}, //0x10 ;rangek_pos_normal 
	{0xd8, 0x08}, //0x08 ;range_base_normal	
	
	{0xe7, 0x10}, //0x10 ;rangek_neg_dummy
	{0xd5, 0x10}, //0x10 ;rangek_pos_dummy
	{0xd9, 0x10}, //0x10 ;range_base_dummy 
	
	{0xd2, 0x10}, //0x10 ;rangek_neg_lowlight
	{0xd6, 0x10}, //0x10 ;rangek_pos_lowlight
	{0xda, 0x10}, //0x10 ;range_base_lowlight
	
	{0xe8, Pre_Value_P1_0xe8},//0x20	//;sharp_fac_pos_outdoor
	{0xec, Pre_Value_P1_0xec},//0x30	//;sharp_fac_neg_outdoor
	{0xe9, Pre_Value_P1_0xe9},//0x10	//;sharp_fac_pos_nr
	{0xed, Pre_Value_P1_0xed},//0x30	//;sharp_fac_neg_nr
	{0xea, Pre_Value_P1_0xea},//0x10	//;sharp_fac_pos_dummy
	{0xef, Pre_Value_P1_0xef},//0x20	//;sharp_fac_neg_dummy
	{0xeb, Pre_Value_P1_0xeb},//0x10	//;sharp_fac_pos_low
	{0xf0, Pre_Value_P1_0xf0},//0x20	//;sharp_fac_neg_low 

	//CCM 
	{0xfd, 0x01},	//
	{0xa0, 0x80},	//;8c;80;80;80(o¨¬¨¦??¨®?¨¹¡ê?¡¤?¨¦?2?¨¤¨ª??)
	{0xa1, 0x00},	//;0c;00;0 ;0 
	{0xa2, 0x00},	//;e8;00;0 ;0 
	{0xa3, 0xf6},	//;ec;ff;f2;f3;f0
	{0xa4, 0x99},	//;99;9a;8e;a6
	{0xa5, 0xf2},	//;fb;e7;0 ;ea
	{0xa6, 0x0d},	//;0d;0c;0 ;0 
	{0xa7, 0xda},	//;da;da;e6;e6
	{0xa8, 0x98},	//;98;9a;9a;9a
	{0xa9, 0x00},	//;30;00;0 ;0 
	{0xaa, 0x33},	//;33;33;3 ;33
	{0xab, 0x0c},	//;0c;0c;c ;c 
	{0xfd, 0x00},	//;00

	//gamma  
	{0xfd, 0x00},	//00
	{0x8b, 0x00},	//0       
	{0x8c, 0x0f},	//12
	{0x8d, 0x21},	//1f
	{0x8e, 0x3b},	//31
	{0x8f, 0x64},	//4c
	{0x90, 0x84},	//62
	{0x91, 0xa0},	//77
	{0x92, 0xb6},	//89
	{0x93, 0xc7},	//9b
	{0x94, 0xd2},	//a8
	{0x95, 0xda},	//b5
	{0x96, 0xe0},	//c0
	{0x97, 0xe6},	//ca
	{0x98, 0xea},	//d4
	{0x99, 0xef},	//dd
	{0x9a, 0xf4},	//e6
	{0x9b, 0xf7},	//ef
	{0xfd, 0x01},	//01
	{0x8d, 0xfb},	//f7
	{0x8e, 0xff},	//ff
	{0xfd, 0x00},	//00
  
	/*  //;?¡ã¨¦? awb
	{0xfd, 0x01},
	{0x11, 0x08},
	{0x12, 0x08},
	{0x2e, 0x04},
	{0x2f, 0x04},
	{0x16, 0x1c},
	{0x17, 0x1a},
	{0x18, 0x16},
	{0x19, 0x54},
	{0x1a, 0x90},
	{0x1b, 0x9b},
	{0x2a, 0xef},
	{0x2b, 0x30},
	{0x21, 0x96},
	{0x22, 0x9a},
	*/
	
	//o¨®¡±zawb
	{0xfd, 0x01},
	{0x28, 0xc4},	
	{0x29, 0x9e},
	{0x11, 0x13},	
	{0x12, 0x13},
	{0x2e, 0x0d},	
	{0x2f, 0x0d},
	{0x16, 0x1c},
	{0x17, 0x1a},
	{0x18, 0x1a},	
	{0x19, 0x54},	
	{0x1a, 0xa5},  
	{0x1b, 0x9a},
	{0x2a, 0xef},

	//;AE
	//;rpc
	{0xfd, 0x00}, //
	{0xe0, 0x3a}, //;38;rpc_1base_max
	{0xe1, 0x2c}, //;2a;rpc_2base_max
	{0xe2, 0x26}, //;26;rpc_3base_max
	{0xe3, 0x22}, //;rpc_4base_max
	{0xe4, 0x22}, //;rpc_5base_max
	{0xe5, 0x20}, //;rpc_6base_max
	{0xe6, 0x20}, //;rpc_7base_max
	{0xe8, 0x20}, //;1e;rpc_8base_max
	{0xe9, 0x20}, //;1e;rpc_9base_max
	{0xea, 0x20}, //;1e;rpc_10base_max
	{0xeb, 0x1e}, //;1d;rpc_11base_max
	{0xf5, 0x1e}, //;1d;rpc_12base_max
	{0xf6, 0x1e}, //;1d;rpc_13base_max
	//;ae min gain	
	{0xfd, 0x01}, //
	{0x94, 0x60}, //;rpc_max_indr
	{0x95, 0x1e}, //;rpc_min_indr 
	{0x9c, 0x60}, //;rpc_max_outdr
	{0x9d, 0x1e}, //;rpc_min_outdr	
	
	
	//;ae target
	{0xfd, 0x00},
	{0xed, Pre_Value_P0_0xf7 + 0x04},//0x84 
	{0xf7, Pre_Value_P0_0xf7},		//0x80 
	{0xf8, Pre_Value_P0_0xf8},		//0x78 
	{0xec, Pre_Value_P0_0xf8 - 0x04},//0x74  
	{0xef, Pre_Value_P0_0xf9 + 0x04},//0x84
	{0xf9, Pre_Value_P0_0xf9},		//0x80
	{0xfa, Pre_Value_P0_0xfa},		//0x78
	{0xee, Pre_Value_P0_0xfa - 0x04},//0x74

	//;gray detect
	{0xfd, 0x01},
	{0x30, 0x40},
	{0x31, 0x70},
	{0x32, 0x20},
	{0x33, 0xef},
	{0x34, 0x02},
	{0x4d, 0x40},
	{0x4e, 0x15},
	{0x4f, 0x13},
		   
	//;saturation
	{0xfd, 0x00}, //
	{0xbe, 0xaa}, //  
	{0xc0, 0xff}, //
	{0xc1, 0xff}, //
	{0xd3, Pre_Value_P0_0xd3},
	{0xd4, Pre_Value_P0_0xd4}, 
	{0xd6, Pre_Value_P0_0xd6},
	{0xd7, Pre_Value_P0_0xd7},
	{0xd8, Pre_Value_P0_0xd8},
	{0xd9, Pre_Value_P0_0xd9}, 
	{0xda, Pre_Value_P0_0xda},
	{0xdb, Pre_Value_P0_0xdb},

	//;heq
	{0xfd, 0x00}, //
	{0xdc, 0x00}, //;heq_offset
	{0xdd, Pre_Value_P0_0xdd},	//;ku
	{0xde, Pre_Value_P0_0xde},	//;90;kl
	{0xdf, 0x80}, //;heq_mean
	  
	//;YCnr
	{0xfd, 0x00}, //
	{0xc2, 0x08}, // ;Ynr_thr_outdoor
	{0xc3, 0x08}, // ;Ynr_thr_normal
	{0xc4, 0x08}, // ;Ynr_thr_dummy
	{0xc5, 0x10}, // ;Ynr_thr_lowlight
	{0xc6, 0x80}, // ;cnr_thr_outdoor
	{0xc7, 0x80}, // ;cnr_thr_normal  
	{0xc8, 0x80}, // ;cnr_thr_dummy	 
	{0xc9, 0x80}, // ;cnr_thr_lowlight  
	
	//;auto lum
	{0xfd, 0x00}, //
	{0xb2, 0x18}, //;10	
	{0xb3, 0x0f}, // 1f
	{0xb4, 0x30}, // 
	{0xb5, 0x45}, // 
		  
	//;func enable
#if 1
	{0xfd, 0x00},
	{0x31, 0x70}, 
	{0x32, 0x0d},
	{0x34, 0x7e},
	{0x33, 0xff},//ef/////////////////
	{0x35, 0x00},
#endif 


/*added by uu*/
	

};

/* TODO: Divide this properly */
static const struct sp0a28_reg configscript_common1_org[] = {
{0xfd, 0x01},
{0x7c, 0x6c},
{0xfd, 0x00},
{0x1C, 0x04},
{0xfd, 0x01},
{0x28, 0xc4},
{0x29, 0x9e},
{0xfd, 0x00},
{0x32, 0x00},
{0x0e, 0x00},
{0x0f, 0x40},
{0x10, 0x40},
{0x11, 0x10},
{0x12, 0xa0},
{0x13, 0x40},
{0x15, 0x00},
{0x16, 0x08},
{0x1A, 0x37},
{0x1B, 0x17},
{0x1C, 0x3f},
{0x1d, 0x00},
{0x1E, 0x57},
{0x21, 0x36},
{0x22, 0x12},
{0x24, 0x80},
{0x25, 0x02},
{0x26, 0x03},
{0x27, 0xeb},
{0x28, 0x5f},
{0x2f, 0x01},
{0x5f, 0x02},
{0xfb, 0x33},
{0xe7, 0x03},
{0xe7, 0x00},

/*;ae setting*/
/*26M 50hz 7-14fps*/
{0xfd, 0x00},
{0x03, 0x00},
{0x04, 0xd2},
{0x05, 0x00},
{0x06, 0x00},
{0x09, 0x03},
{0x0a, 0xe5},
{0xf0, 0x46},
{0xf1, 0x00},
{0xfd, 0x01},
{0x90, 0x0e},
{0x92, 0x01},
{0x98, 0x46},
{0x99, 0x00},
{0x9a, 0x01},
{0x9b, 0x00},

{0xfd, 0x01},
{0xc4, 0x6c},
{0xc5, 0x7c},
{0xca, 0x30},
{0xcb, 0x45},
{0xcc, 0x60},
{0xcd, 0x60},
{0xfd, 0x01},
{0xce, 0xd4},
{0xcf, 0x03},
{0xd0, 0xd4},
{0xd1, 0x03},
{0xfd, 0x00},

/* lsc for SX5044module */
{0xfd, 0x01},
{0x35, 0x0e},
{0x36, 0x14},
{0x37, 0x20},
{0x38, 0x1c},
{0x39, 0x09},
{0x3a, 0x10},
{0x3b, 0x19},
{0x3c, 0x1a},
{0x3d, 0x08},
{0x3e, 0x10},
{0x3f, 0x14},
{0x40, 0x22},
{0x41, 0x0a},
{0x42, 0x00},
{0x43, 0x0a},
{0x44, 0xfc},
{0x45, 0x00},
{0x46, 0xfe},
{0x47, 0x00},
{0x48, 0xf8},
{0x49, 0x00},
{0x4a, 0xf8},
{0x4b, 0x00},
{0x4c, 0xf2},
{0xfd, 0x00},
{0xa1, 0x20},
{0xa2, 0x20},
{0xa3, 0x20},
{0xa4, 0xff},
/* smooth*/
{0xfd, 0x01},
{0xde, 0x0f},
{0xfd, 0x00},
/*	;åééé´å¹³æ»éå¼ */
{0x57, 0x04},
{0x58, 0x12},
{0x56, 0x12},
{0x59, 0x18},
/*GrGbå¹³æ»éå¼ */
{0x89, 0x04},
{0x8a, 0x0a},
{0x9c, 0x10},
{0x9d, 0x15},
/* Gr\Gbä¹é´å¹³æ»å¼ºåº¦ */
{0x81, 0xe0},
{0x82, 0xa0},
{0x83, 0x80},
{0x84, 0x80},
/* GrãGbåééåå¹³æ»å¼ºåº¦  */
{0x85, 0xe0},
{0x86, 0xa0},
{0x87, 0x80},
{0x88, 0x80},
/* RãBå¹³æ»å¼ºåº¦  */
{0x5a, 0xff},
{0x5b, 0xc0},
{0x5c, 0xa0},
{0x5d, 0x80},
/* adt å¹³æ»éå¼èªéåº */
{0xa7, 0xff},
{0xa8, 0xff},
{0xa9, 0xff},
{0xaa, 0xff},

/* dem_morie_thr å»æ©å°çº¹ */
{0x9e, 0x10},
/* sharpen  */
{0xfd, 0x01},
{0xdf, 0x0f},
{0xe2, 0x30},
{0xe4, 0xa0},

{0xe5, 0x08},
{0xd3, 0x10},
{0xd7, 0x08},

{0xe6, 0x08},
{0xd4, 0x10},
{0xd8, 0x08},

{0xe7, 0x10},
{0xd5, 0x10},
{0xd9, 0x10},

{0xd2, 0x10},
{0xd6, 0x10},
{0xda, 0x10},

{0xe8, Pre_Value_P1_0xe8},
{0xec, Pre_Value_P1_0xec},
{0xe9, Pre_Value_P1_0xe9},
{0xed, Pre_Value_P1_0xed},
{0xea, Pre_Value_P1_0xea},
{0xef, Pre_Value_P1_0xef},
{0xeb, Pre_Value_P1_0xeb},
{0xf0, Pre_Value_P1_0xf0},

/* CCM */
{0xfd, 0x01},
{0xa0, 0xb3},
{0xa1, 0x00},
{0xa2, 0xcd},
{0xa3, 0xf6},
{0xa4, 0x99},
{0xa5, 0xf1},
{0xa6, 0x0d},
{0xa7, 0xda},
{0xa8, 0x98},
{0xa9, 0x30},
{0xaa, 0x33},
{0xab, 0x0c},
{0xfd, 0x00},

/* gamma  */
{0xfd, 0x00},
{0x8b, 0x00},
{0x8c, 0x0f},
{0x8d, 0x21},
{0x8e, 0x3b},
{0x8f, 0x64},
{0x90, 0x84},
{0x91, 0xa0},
{0x92, 0xb6},
{0x93, 0xc7},
{0x94, 0xd2},
{0x95, 0xda},
{0x96, 0xe0},
{0x97, 0xe6},
{0x98, 0xea},
{0x99, 0xef},
{0x9a, 0xf4},
{0x9b, 0xf7},
{0xfd, 0x01},
{0x8d, 0xfb},
{0x8e, 0xff},
{0xfd, 0x00},

{0xfd, 0x01},
{0x11, 0x08},
{0x12, 0x08},
{0x2e, 0x04},
{0x2f, 0x04},
{0x16, 0x1c},
{0x17, 0x1a},
{0x18, 0x16},
{0x19, 0x54},
{0x1a, 0x90},
{0x1b, 0x9b},
{0x2a, 0xef},
{0x2b, 0x30},
{0x21, 0x96},
{0x22, 0x9a},

/* ;rpc */
{0xfd, 0x00},
{0xe0, 0x3a},
{0xe1, 0x2c},
{0xe2, 0x26},
{0xe3, 0x22},
{0xe4, 0x22},
{0xe5, 0x20},
{0xe6, 0x20},
{0xe8, 0x20},
{0xe9, 0x20},
{0xea, 0x20},
{0xeb, 0x1e},
{0xf5, 0x1e},
{0xf6, 0x1e},
/* ;ae min gain */
{0xfd, 0x01},
{0x94, 0x60},
{0x95, 0x1e},
{0x9c, 0x60},
{0x9d, 0x1e},

/* ;ae target */
{0xfd, 0x00},
{0xed, Pre_Value_P0_0xf7 + 0x04},
{0xf7, Pre_Value_P0_0xf7},
{0xf8, Pre_Value_P0_0xf8},
{0xec, Pre_Value_P0_0xf8 - 0x04},
{0xef, Pre_Value_P0_0xf9 + 0x04},
{0xf9, Pre_Value_P0_0xf9},
{0xfa, Pre_Value_P0_0xfa},
{0xee, Pre_Value_P0_0xfa - 0x04},

/* ;gray detect */
{0xfd, 0x01},
{0x30, 0x40},
{0x31, 0x70},
{0x32, 0x20},
{0x33, 0xef},
{0x34, 0x02},
{0x4d, 0x40},
{0x4e, 0x15},
{0x4f, 0x13},

/* ;saturation */
{0xfd, 0x00},
{0xbe, 0xaa},
{0xc0, 0xff},
{0xc1, 0xff},
{0xd3, Pre_Value_P0_0xd3},
{0xd4, Pre_Value_P0_0xd4},
{0xd6, Pre_Value_P0_0xd6},
{0xd7, Pre_Value_P0_0xd7},
{0xd8, Pre_Value_P0_0xd8},
{0xd9, Pre_Value_P0_0xd9},
{0xda, Pre_Value_P0_0xda},
{0xdb, Pre_Value_P0_0xdb},

/* ;heq */
{0xfd, 0x00},
{0xdc, 0x00},
{0xdd, Pre_Value_P0_0xdd},
{0xde, Pre_Value_P0_0xde},
{0xdf, 0x80},

/* YCnr */
{0xfd, 0x00},
{0xc2, 0x08},
{0xc3, 0x08},
{0xc4, 0x08},
{0xc5, 0x10},
{0xc6, 0x80},
{0xc7, 0x80},
{0xc8, 0x80},
{0xc9, 0x80},

/* auto lum */
{0xfd, 0x00},
{0xb2, 0x18},
{0xb3, 0x0f},
{0xb4, 0x30},
{0xb5, 0x45},

/* func enable */
{0xfd, 0x00},
{0xf4, 0x09},
{0x31, 0x30},
{0x32, 0x0d},
{0x34, 0x1e},
{0x33, 0xef},
};

static const struct sp0a28_reg yuv422_init_common[] = {

};

static const struct sp0a28_reg jpeg_init_common[] = {

};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/*EFFECT */
static const struct sp0a28_reg sp0a28_effect_normal_tbl[] = {
	
	{0xfd, 0x00},
	{0x62, 0x00},
	{0x63, 0x80},
	{0x64, 0x80},
	
};

static const struct sp0a28_reg sp0a28_effect_bw_tbl[] = {
	{0xfd, 0x00},
	{0x62, 0x20},
	{0x63, 0x80},
	{0x64, 0x80},

};

static const struct sp0a28_reg sp0a28_effect_sepia_tbl[] = {
	{0xfd, 0x00},
	{0x62, 0x10},
	{0x63, 0xc0},
	{0x64, 0x20},

};

static const struct sp0a28_reg sp0a28_effect_negative_tbl[] = {
	{0xfd, 0x00},
	{0x62, 0x04},
	{0x63, 0x80},
	{0x64, 0x80},

};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/*AntiBanding */
static const struct sp0a28_reg sp0a28_antibanding_auto_tbl[] = {

};

static const struct sp0a28_reg sp0a28_antibanding_50z_tbl[] = {

};

static const struct sp0a28_reg sp0a28_antibanding_60z_tbl[] = {

};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/*Lens_shading*/

static const struct sp0a28_reg sp0a28_lens_shading_on_tbl[] = {

};


static const struct sp0a28_reg sp0a28_lens_shading_off_tbl[] = {

};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/*Contrast */

static const struct sp0a28_reg sp0a28_contrast_default_lv3_tbl[] = {

};

static const struct sp0a28_reg sp0a28_contrast_lv0_tbl[] = {

};

static const struct sp0a28_reg sp0a28_contrast_lv1_tbl[] = {

};

static const struct sp0a28_reg sp0a28_contrast_lv2_tbl[] = {

};

static const struct sp0a28_reg sp0a28_contrast_lv4_tbl[] = {

};

static const struct sp0a28_reg sp0a28_contrast_lv5_tbl[] = {

};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/*sharpness */

static const struct sp0a28_reg sp0a28_sharpness_default_lv2_tbl[] = {

};

static const struct sp0a28_reg sp0a28_sharpness_lv0_tbl[] = {

};

static const struct sp0a28_reg sp0a28_sharpness_lv1_tbl[] = {

};

static const struct sp0a28_reg sp0a28_sharpness_lv3_tbl[] = {

};

static const struct sp0a28_reg sp0a28_sharpness_lv4_tbl[] = {

};

static const struct sp0a28_reg sp0a28_sharpness_lv5_tbl[] = {

};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/* saturation */

static const struct sp0a28_reg sp0a28_saturation_default_lv3_tbl[] = {

};

static const struct sp0a28_reg sp0a28_saturation_lv0_tbl[] = {

};

static const struct sp0a28_reg sp0a28_saturation_lv1_tbl[] = {

};

static const struct sp0a28_reg sp0a28_saturation_lv2_tbl[] = {

};

static const struct sp0a28_reg sp0a28_saturation_lv4_tbl[] = {

};

static const struct sp0a28_reg sp0a28_saturation_lv5_tbl[] = {

};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/* brightness */

static const struct sp0a28_reg sp0a28_ev_minus_4_regs[] = {
	{0xfd, 0x00},
	{0xdc, 0xc0},
};

static const struct sp0a28_reg sp0a28_ev_minus_3_regs[] = {
	{0xfd, 0x00},
	{0xdc, 0xd0},
};

static const struct sp0a28_reg sp0a28_ev_minus_2_regs[] = {
	{0xfd, 0x00},
	{0xdc, 0xe0},
};

static const struct sp0a28_reg sp0a28_ev_minus_1_regs[] = {
	{0xfd, 0x00},
	{ 0xdc, 0xf0},
};

static const struct sp0a28_reg sp0a28_ev_default_regs[] = {
	{0xfd, 0x00},
	{0xdc, 0x00},
};

static const struct sp0a28_reg sp0a28_ev_plus_1_regs[] = {
	{0xfd, 0x00},
	{0xdc, 0x10},
};

static const struct sp0a28_reg sp0a28_ev_plus_2_regs[] = {
	{0xfd, 0x00},
	{0xdc, 0x20},
};

static const struct sp0a28_reg sp0a28_ev_plus_3_regs[] = {
	{0xfd, 0x00},
	{0xdc, 0x30},
};

static const struct sp0a28_reg sp0a28_ev_plus_4_regs[] = {
	{0xfd, 0x00},
	{ 0xdc, 0x40},
};


/* ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/* Auto Expourse */

static const struct sp0a28_reg sp0a28_ae_average_tbl[] = {

};

static const struct sp0a28_reg sp0a28_ae_centerweight_tbl[] = {

};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
/*default awb */
static const struct sp0a28_reg sp0a28_wb_def[] = {
	{0xfd, 0x01},
	{0x28, 0xc4},
	{0x29, 0x9e},
	{0xfd, 0x00},
	{0x32, 0x0d},

};

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ */
/* White Balance */
static const struct sp0a28_reg sp0a28_wb_fluorescent[] = {
	{0xfd, 0x00},
	{0x32, 0x05},
	{0xfd, 0x01},
	{0x28, 0xb4},
	{0x29, 0xc4},
	{0xfd, 0x00},

};

static const struct sp0a28_reg sp0a28_wb_daylight[] = {
	{0xfd, 0x00},
	{0x32, 0x05},
	{0xfd, 0x01},
	{0x28, 0xc1},
	{0x29, 0x88},
	{0xfd, 0x00},

};

static const struct sp0a28_reg sp0a28_wb_cloudy[] = {
	{0xfd, 0x00},
	{0x32, 0x05},
	{0xfd, 0x01},
	{0x28, 0xe2},
	{0x29, 0x82},
	{0xfd, 0x00},

};

static const struct sp0a28_reg sp0a28_wb_tungsten[] = {
	{0xfd, 0x00},
	{0x32, 0x05},
	{0xfd, 0x01},
	{0x28, 0x7b},
	{0x29, 0xd3},
	{0xfd, 0x00},

};

static const struct sp0a28_reg sp0a28_fps_5[] = {

};

static const struct sp0a28_reg sp0a28_fps_7[] = {

};
static const struct sp0a28_reg sp0a28_fps_10[] = {

};
static const struct sp0a28_reg sp0a28_fps_15[] = {

};
static const struct sp0a28_reg sp0a28_fps_20[] = {

};
static const struct sp0a28_reg sp0a28_fps_25[] = {

};

static const struct sp0a28_reg sp0a28_fps_30[] = {

};


static const struct sp0a28_reg sp0a28_afpreinit_tbl[] = {

};

static const struct sp0a28_reg sp0a28_afpostinit_tbl[] = {

};

const u8 sp0a28_afinit_data[] = {};

#endif /* __SP0A28_H__ */
