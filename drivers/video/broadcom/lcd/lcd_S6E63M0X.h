/*******************************************************************************
* Copyright 2010 Broadcom Corporation.  All rights reserved.
*
* 	@file	drivers/video/broadcom/displays/lcd_S6E63M0X.h
*
* Unless you and Broadcom execute a separate DISPCTRL_WRitten software license agreement
* governing use of this software, this software is licensed to you under the
* terms of the GNU General Public License version 2, available at
* http://www.gnu.org/copyleft/gpl.html (the "GPL").
*
* Notwithstanding the above, under no circumstances may you combine this
* software in any way with any other Broadcom software provided under a license
* other than the GPL, without Broadcom's express prior DISPCTRL_WRitten consent.
*******************************************************************************/

/****************************************************************************
*
*  lcd_S6E63M0X.h
*
*  PURPOSE:
*    This is the LCD-specific code for a S6E63M0X module.
*
*****************************************************************************/

/* ---- Include Files ---------------------------------------------------- */
#ifndef __BCM_LCD_S6E63M0X_H
#define __BCM_LCD_S6E63M0X_H

//  LCD command definitions
#define PIXEL_FORMAT_RGB565	0x05   // for 16 bits
#define PIXEL_FORMAT_RGB666	0x06   // for 18 bits
#define PIXEL_FORMAT_RGB888	0x07   // for 24 bits

#define MAX_BRIGHTNESS		255
#define DEFAULT_BRIGHTNESS	160
#define DEFAULT_GAMMA_LEVEL	14/*180cd*/
#define MAX_GAMMA_VALUE 	24
#define MAX_GAMMA_LEVEL		25

#define DIM_BL 20
#define MIN_BL 30
#define MAX_BL 255

//#define GAMMA_PARAM_LEN	21

//#define ELVSS_SET_START_IDX 2
//#define ELVSS_SET_END_IDX 5

#define GAMMA_INDEX_NOT_SET	0xFFFF

/*
#define ID_VALUE_M2			0xA4
#define ID_VALUE_SM2			0xB4
#define ID_VALUE_SM2_1		0xB6
*/

static const unsigned int candela_table[24] = {
	 30,  40,  50,  60,  70, 80, 90, 100, 
	110, 120, 130, 140, 150, 160, 170, 180, 190, 200,
	210, 220, 230, 240, 250, 299
};

enum elvss_brightness {
	elvss_not_set,
	elvss_30cd_to_100cd,
	elvss_110cd_to_160cd,
	elvss_170cd_to_200cd,
	elvss_210cd_to_300cd,
};

const char *LCD_panel_name = "S6E63M0X LCD";

typedef enum {
	S6E63M0X_CMD_NOP					= 0x00,
	S6E63M0X_CMD_SWRESET				= 0x01,
	S6E63M0X_CMD_RDNUMERR				= 0x05,
	S6E63M0X_CMD_RDDPM					= 0x0A,
	S6E63M0X_CMD_RDDCOLMOD				= 0x0C,
	S6E63M0X_CMD_RDDIM					= 0x0D,
	S6E63M0X_CMD_RDDSM					= 0x0E,
	S6E63M0X_CMD_SLPIN					= 0x10,
	S6E63M0X_CMD_SLPOUT					= 0x11,
	S6E63M0X_CMD_NORON					= 0x13,
	S6E63M0X_CMD_ALLPOFF				= 0x22,
	S6E63M0X_CMD_ALLPON					= 0x23,
	S6E63M0X_CMD_GAMSET					= 0x26,
	S6E63M0X_CMD_DISPOFF				= 0x28,
	S6E63M0X_CMD_DISPON					= 0x29,
	S6E63M0X_CMD_TEOFF					= 0x34,
	S6E63M0X_CMD_TEON					= 0x35,
	S6E63M0X_CMD_COLMOD					= 0x3A,
	S6E63M0X_CMD_RDDDBSTART				= 0xA1,
	S6E63M0X_CMD_RDDDBCONT				= 0xA8,
	S6E63M0X_CMD_GLOBAL_PARAM 			= 0xB0,
	S6E63M0X_CMD_ELVSS_CON				= 0xB1,
	S6E63M0X_CMD_TEMP_SWIRE				= 0xB2,
	S6E63M0X_CMD_PENTILE_1				= 0xB3,
	S6E63M0X_CMD_PENTILE_2				= 0xB4,
	S6E63M0X_CMD_GAMMA_DELTA_Y_RED		= 0xB5,
	S6E63M0X_CMD_GAMMA_DELTA_X_RED		= 0xB6,
	S6E63M0X_CMD_GAMMA_DELTA_Y_GREEN	= 0xB7,
	S6E63M0X_CMD_GAMMA_DELTA_X_GREEN	= 0xB8,
	S6E63M0X_CMD_GAMMA_DELTA_Y_BLUE		= 0xB9,
	S6E63M0X_CMD_GAMMA_DELTA_X_BLUE		= 0xBA,
	S6E63M0X_CMD_ACL_CTL				= 0xC0,
	S6E63M0X_CMD_ACL_UPDATE				= 0xC1,
	S6E63M0X_CMD_RDID1					= 0xDA,
	S6E63M0X_CMD_RDID2					= 0xDB,
	S6E63M0X_CMD_RDID3					= 0xDC,
	S6E63M0X_CMD_ERROR_CHECK			= 0xD5,
	S6E63M0X_CMD_LEVEL_2_KEY			= 0xF0,
	S6E63M0X_CMD_MTP_KEY				= 0xF1,
	S6E63M0X_CMD_DISPCTL				= 0xF2,
	S6E63M0X_CMD_SRC_CTL				= 0xF6,
	S6E63M0X_CMD_IF_CTL					= 0xF7,
	S6E63M0X_CMD_PANEL_CON				= 0xF8,
	S6E63M0X_CMD_GAMMA_CTL				= 0xFA,
} S6E63M0X_CMD_T;

DISPCTRL_REC_T panel_on_seq[] =
{
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_DISPON, 0},
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T panel_off_seq[] =
{
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_DISPOFF, 0},
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T sleep_in_seq[] =
{
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_DISPOFF, 0},
	{DISPCTRL_SLEEP_MS, 0, 10},
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_SLPIN, 0},
	{DISPCTRL_SLEEP_MS, 0, 120},
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T sleep_out_seq[] = {
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_SLPOUT, 0},
	{DISPCTRL_SLEEP_MS, 0, 120},
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T l2_mtp_enable_seq[] =
{
  {DISPCTRL_WR_CMND, S6E63M0X_CMD_LEVEL_2_KEY, 0x0},
	{DISPCTRL_WR_DATA, 0, 0x5A},
	{DISPCTRL_WR_DATA, 0, 0x5A},
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_MTP_KEY, 0x0},
	{DISPCTRL_WR_DATA, 0, 0x5A},
	{DISPCTRL_WR_DATA, 0, 0x5A},
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T error_check_seq[] =
{	
    {DISPCTRL_WR_CMND, S6E63M0X_CMD_ERROR_CHECK, 0x0},
	{DISPCTRL_WR_DATA, 0, 0xE7},
	{DISPCTRL_WR_DATA, 0, 0x14},
	{DISPCTRL_WR_DATA, 0, 0x60},
	{DISPCTRL_WR_DATA, 0, 0x17},
	{DISPCTRL_WR_DATA, 0, 0x0A},
	{DISPCTRL_WR_DATA, 0, 0x49},
	{DISPCTRL_WR_DATA, 0, 0xC3},
	{DISPCTRL_WR_DATA, 0, 0x8F},
	{DISPCTRL_WR_DATA, 0, 0x19},
	{DISPCTRL_WR_DATA, 0, 0x64},
	{DISPCTRL_WR_DATA, 0, 0x91},
	{DISPCTRL_WR_DATA, 0, 0x84},
	{DISPCTRL_WR_DATA, 0, 0x76},
	{DISPCTRL_WR_DATA, 0, 0x20},
	{DISPCTRL_WR_DATA, 0, 0x0F},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T acl_40P_seq[] =
{
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_ACL_UPDATE, 0x0}, //ACL update
	{DISPCTRL_WR_DATA, 0, 0x4D},
	{DISPCTRL_WR_DATA, 0, 0x96},
	{DISPCTRL_WR_DATA, 0, 0x1D},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x01},
	{DISPCTRL_WR_DATA, 0, 0xDF},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x03},
	{DISPCTRL_WR_DATA, 0, 0x1F},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x01},
	{DISPCTRL_WR_DATA, 0, 0x06},
	{DISPCTRL_WR_DATA, 0, 0x0C},
	{DISPCTRL_WR_DATA, 0, 0x11},
	{DISPCTRL_WR_DATA, 0, 0x16},
	{DISPCTRL_WR_DATA, 0, 0x1C},
	{DISPCTRL_WR_DATA, 0, 0x21},
	{DISPCTRL_WR_DATA, 0, 0x26},
	{DISPCTRL_WR_DATA, 0, 0x2B},
	{DISPCTRL_WR_DATA, 0, 0x31},
	{DISPCTRL_WR_DATA, 0, 0x36},
	{DISPCTRL_LIST_END, 0, 0},
};


DISPCTRL_REC_T acl_on_seq[] =
{
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_ACL_CTL, 0x0}, //ACL on
	{DISPCTRL_WR_DATA, 0, 0x01},
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T acl_off_seq[] =
{
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_ACL_CTL, 0x0}, //ACL off
	{DISPCTRL_WR_DATA, 0, 0x0},
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T panel_conditon_seq[] =
{	
	//conflicts between operating manual & reference code
	//{DISPCTRL_WR_CMND, S6E63M0X_CMD_SLPOUT, 0x0},
	//{DISPCTRL_SLEEP_MS, 0, 10},

	{DISPCTRL_WR_CMND, S6E63M0X_CMD_PANEL_CON, 0x0},  /* Panel condition set */
	{DISPCTRL_WR_DATA, 0, 0x01},
	{DISPCTRL_WR_DATA, 0, 0x2C},
	{DISPCTRL_WR_DATA, 0, 0x2C},
	{DISPCTRL_WR_DATA, 0, 0x07},
	{DISPCTRL_WR_DATA, 0, 0x07},
	{DISPCTRL_WR_DATA, 0, 0x5F},
	{DISPCTRL_WR_DATA, 0, 0xB3},
	{DISPCTRL_WR_DATA, 0, 0x6D},
	{DISPCTRL_WR_DATA, 0, 0x97},
	{DISPCTRL_WR_DATA, 0, 0x1D},
	{DISPCTRL_WR_DATA, 0, 0x3A},
	{DISPCTRL_WR_DATA, 0, 0x0F},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x00},	
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T disp_conditon_seq[] =
{
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_DISPCTL, 0}, /* Display condition set */
	{DISPCTRL_WR_DATA, 0, 0x02},
	{DISPCTRL_WR_DATA, 0, 0x05},
	{DISPCTRL_WR_DATA, 0, 0x1C},
	{DISPCTRL_WR_DATA, 0, 0x10},
	{DISPCTRL_WR_DATA, 0, 0x10},

	{DISPCTRL_WR_CMND, S6E63M0X_CMD_IF_CTL, 0}, /* Display condition set */
	{DISPCTRL_WR_DATA, 0, 0x03},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x00},

	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T etc_condition_seq[] =
{	
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_SRC_CTL, 0x0}, /* Etc condition set */
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x8E},
	{DISPCTRL_WR_DATA, 0, 0x0F},
	
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_PENTILE_1, 0x0},
	{DISPCTRL_WR_DATA, 0, 0x6c},

	{DISPCTRL_WR_CMND, S6E63M0X_CMD_GAMMA_DELTA_Y_RED, 0x0}, 
	{DISPCTRL_WR_DATA, 0, 0x2C}, // 1
	{DISPCTRL_WR_DATA, 0, 0x12}, // 2
	{DISPCTRL_WR_DATA, 0, 0x0C}, // 3
	{DISPCTRL_WR_DATA, 0, 0x0A}, // 4
	{DISPCTRL_WR_DATA, 0, 0x10}, // 5
	{DISPCTRL_WR_DATA, 0, 0x0E}, // 6
	{DISPCTRL_WR_DATA, 0, 0x17}, // 7
	{DISPCTRL_WR_DATA, 0, 0x13}, // 8
	{DISPCTRL_WR_DATA, 0, 0x1F}, // 9
	{DISPCTRL_WR_DATA, 0, 0x1A}, // 10
	{DISPCTRL_WR_DATA, 0, 0x2A}, // 11
	{DISPCTRL_WR_DATA, 0, 0x24}, // 12
	{DISPCTRL_WR_DATA, 0, 0x1F}, // 13
	{DISPCTRL_WR_DATA, 0, 0x1B}, // 14
	{DISPCTRL_WR_DATA, 0, 0x1A}, // 15
	{DISPCTRL_WR_DATA, 0, 0x17}, // 16
	{DISPCTRL_WR_DATA, 0, 0x2B}, // 17
	{DISPCTRL_WR_DATA, 0, 0x26}, // 18
	{DISPCTRL_WR_DATA, 0, 0x22}, // 19
	{DISPCTRL_WR_DATA, 0, 0x20}, // 20
	{DISPCTRL_WR_DATA, 0, 0x3A}, // 21
	{DISPCTRL_WR_DATA, 0, 0x34}, // 22
	{DISPCTRL_WR_DATA, 0, 0x30}, // 23
	{DISPCTRL_WR_DATA, 0, 0x2C}, // 24
	{DISPCTRL_WR_DATA, 0, 0x29}, // 25
	{DISPCTRL_WR_DATA, 0, 0x26}, // 26
	{DISPCTRL_WR_DATA, 0, 0x25}, // 27
	{DISPCTRL_WR_DATA, 0, 0x23}, // 28
	{DISPCTRL_WR_DATA, 0, 0x21}, // 29
	{DISPCTRL_WR_DATA, 0, 0x20}, // 30
	{DISPCTRL_WR_DATA, 0, 0x1E}, // 31
	{DISPCTRL_WR_DATA, 0, 0x1E}, // 32

	{DISPCTRL_WR_CMND, S6E63M0X_CMD_GAMMA_DELTA_X_RED, 0x0}, 
	{DISPCTRL_WR_DATA, 0, 0x00}, // 1
	{DISPCTRL_WR_DATA, 0, 0x00}, // 2
	{DISPCTRL_WR_DATA, 0, 0x11}, // 3
	{DISPCTRL_WR_DATA, 0, 0x22}, // 4
	{DISPCTRL_WR_DATA, 0, 0x33}, // 5
	{DISPCTRL_WR_DATA, 0, 0x44}, // 6
	{DISPCTRL_WR_DATA, 0, 0x44}, // 7
	{DISPCTRL_WR_DATA, 0, 0x44}, // 8
	{DISPCTRL_WR_DATA, 0, 0x55}, // 9
	{DISPCTRL_WR_DATA, 0, 0x55}, // 10
	{DISPCTRL_WR_DATA, 0, 0x66}, // 11
	{DISPCTRL_WR_DATA, 0, 0x66}, // 12
	{DISPCTRL_WR_DATA, 0, 0x66}, // 13
	{DISPCTRL_WR_DATA, 0, 0x66}, // 14
	{DISPCTRL_WR_DATA, 0, 0x66}, // 15
	{DISPCTRL_WR_DATA, 0, 0x66}, // 16	
	
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_GAMMA_DELTA_Y_GREEN, 0x0}, 
	{DISPCTRL_WR_DATA, 0, 0x2C}, // 1
	{DISPCTRL_WR_DATA, 0, 0x12}, // 2
	{DISPCTRL_WR_DATA, 0, 0x0C}, // 3
	{DISPCTRL_WR_DATA, 0, 0x0A}, // 4
	{DISPCTRL_WR_DATA, 0, 0x10}, // 5
	{DISPCTRL_WR_DATA, 0, 0x0E}, // 6
	{DISPCTRL_WR_DATA, 0, 0x17}, // 7
	{DISPCTRL_WR_DATA, 0, 0x13}, // 8
	{DISPCTRL_WR_DATA, 0, 0x1F}, // 9
	{DISPCTRL_WR_DATA, 0, 0x1A}, // 10
	{DISPCTRL_WR_DATA, 0, 0x2A}, // 11
	{DISPCTRL_WR_DATA, 0, 0x24}, // 12
	{DISPCTRL_WR_DATA, 0, 0x1F}, // 13
	{DISPCTRL_WR_DATA, 0, 0x1B}, // 14
	{DISPCTRL_WR_DATA, 0, 0x1A}, // 15
	{DISPCTRL_WR_DATA, 0, 0x17}, // 16
	{DISPCTRL_WR_DATA, 0, 0x2B}, // 17
	{DISPCTRL_WR_DATA, 0, 0x26}, // 18
	{DISPCTRL_WR_DATA, 0, 0x22}, // 19
	{DISPCTRL_WR_DATA, 0, 0x20}, // 20
	{DISPCTRL_WR_DATA, 0, 0x3A}, // 21
	{DISPCTRL_WR_DATA, 0, 0x34}, // 22
	{DISPCTRL_WR_DATA, 0, 0x30}, // 23
	{DISPCTRL_WR_DATA, 0, 0x2C}, // 24
	{DISPCTRL_WR_DATA, 0, 0x29}, // 25
	{DISPCTRL_WR_DATA, 0, 0x26}, // 26
	{DISPCTRL_WR_DATA, 0, 0x25}, // 27
	{DISPCTRL_WR_DATA, 0, 0x23}, // 28
	{DISPCTRL_WR_DATA, 0, 0x21}, // 29
	{DISPCTRL_WR_DATA, 0, 0x20}, // 30
	{DISPCTRL_WR_DATA, 0, 0x1E}, // 31
	{DISPCTRL_WR_DATA, 0, 0x1E}, // 32

	{DISPCTRL_WR_CMND, S6E63M0X_CMD_GAMMA_DELTA_X_GREEN, 0x0}, 
	{DISPCTRL_WR_DATA, 0, 0x00}, // 1
	{DISPCTRL_WR_DATA, 0, 0x00}, // 2
	{DISPCTRL_WR_DATA, 0, 0x11}, // 3
	{DISPCTRL_WR_DATA, 0, 0x22}, // 4
	{DISPCTRL_WR_DATA, 0, 0x33}, // 5
	{DISPCTRL_WR_DATA, 0, 0x44}, // 6
	{DISPCTRL_WR_DATA, 0, 0x44}, // 7
	{DISPCTRL_WR_DATA, 0, 0x44}, // 8
	{DISPCTRL_WR_DATA, 0, 0x55}, // 9
	{DISPCTRL_WR_DATA, 0, 0x55}, // 10
	{DISPCTRL_WR_DATA, 0, 0x66}, // 11
	{DISPCTRL_WR_DATA, 0, 0x66}, // 12
	{DISPCTRL_WR_DATA, 0, 0x66}, // 13
	{DISPCTRL_WR_DATA, 0, 0x66}, // 14
	{DISPCTRL_WR_DATA, 0, 0x66}, // 15
	{DISPCTRL_WR_DATA, 0, 0x66}, // 16

	{DISPCTRL_WR_CMND, S6E63M0X_CMD_GAMMA_DELTA_Y_BLUE, 0x0}, 
	{DISPCTRL_WR_DATA, 0, 0x2C}, // 1
	{DISPCTRL_WR_DATA, 0, 0x12}, // 2
	{DISPCTRL_WR_DATA, 0, 0x0C}, // 3
	{DISPCTRL_WR_DATA, 0, 0x0A}, // 4
	{DISPCTRL_WR_DATA, 0, 0x10}, // 5
	{DISPCTRL_WR_DATA, 0, 0x0E}, // 6
	{DISPCTRL_WR_DATA, 0, 0x17}, // 7
	{DISPCTRL_WR_DATA, 0, 0x13}, // 8
	{DISPCTRL_WR_DATA, 0, 0x1F}, // 9
	{DISPCTRL_WR_DATA, 0, 0x1A}, // 10
	{DISPCTRL_WR_DATA, 0, 0x2A}, // 11
	{DISPCTRL_WR_DATA, 0, 0x24}, // 12
	{DISPCTRL_WR_DATA, 0, 0x1F}, // 13
	{DISPCTRL_WR_DATA, 0, 0x1B}, // 14
	{DISPCTRL_WR_DATA, 0, 0x1A}, // 15
	{DISPCTRL_WR_DATA, 0, 0x17}, // 16
	{DISPCTRL_WR_DATA, 0, 0x2B}, // 17
	{DISPCTRL_WR_DATA, 0, 0x26}, // 18
	{DISPCTRL_WR_DATA, 0, 0x22}, // 19
	{DISPCTRL_WR_DATA, 0, 0x20}, // 20
	{DISPCTRL_WR_DATA, 0, 0x3A}, // 21
	{DISPCTRL_WR_DATA, 0, 0x34}, // 22
	{DISPCTRL_WR_DATA, 0, 0x30}, // 23
	{DISPCTRL_WR_DATA, 0, 0x2C}, // 24
	{DISPCTRL_WR_DATA, 0, 0x29}, // 25
	{DISPCTRL_WR_DATA, 0, 0x26}, // 26
	{DISPCTRL_WR_DATA, 0, 0x25}, // 27
	{DISPCTRL_WR_DATA, 0, 0x23}, // 28
	{DISPCTRL_WR_DATA, 0, 0x21}, // 29
	{DISPCTRL_WR_DATA, 0, 0x20}, // 30
	{DISPCTRL_WR_DATA, 0, 0x1E}, // 31
	{DISPCTRL_WR_DATA, 0, 0x1E}, // 32

	{DISPCTRL_WR_CMND, S6E63M0X_CMD_GAMMA_DELTA_X_BLUE, 0x0}, 
	{DISPCTRL_WR_DATA, 0, 0x00}, // 1
	{DISPCTRL_WR_DATA, 0, 0x00}, // 2
	{DISPCTRL_WR_DATA, 0, 0x11}, // 3
	{DISPCTRL_WR_DATA, 0, 0x22}, // 4
	{DISPCTRL_WR_DATA, 0, 0x33}, // 5
	{DISPCTRL_WR_DATA, 0, 0x44}, // 6
	{DISPCTRL_WR_DATA, 0, 0x44}, // 7
	{DISPCTRL_WR_DATA, 0, 0x44}, // 8
	{DISPCTRL_WR_DATA, 0, 0x55}, // 9
	{DISPCTRL_WR_DATA, 0, 0x55}, // 10
	{DISPCTRL_WR_DATA, 0, 0x66}, // 11
	{DISPCTRL_WR_DATA, 0, 0x66}, // 12
	{DISPCTRL_WR_DATA, 0, 0x66}, // 13
	{DISPCTRL_WR_DATA, 0, 0x66}, // 14
	{DISPCTRL_WR_DATA, 0, 0x66}, // 15
	{DISPCTRL_WR_DATA, 0, 0x66}, // 16
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T gamma_300CD_seq[] =
{
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_GAMMA_CTL, 0x0},
	{DISPCTRL_WR_DATA, 0, 0x02},
	{DISPCTRL_WR_DATA, 0, 0x31},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0x4F},
	{DISPCTRL_WR_DATA, 0, 0x14},
	{DISPCTRL_WR_DATA, 0, 0x6E},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0xA3},
	{DISPCTRL_WR_DATA, 0, 0xC0},
	{DISPCTRL_WR_DATA, 0, 0x92},
	{DISPCTRL_WR_DATA, 0, 0xA4},
	{DISPCTRL_WR_DATA, 0, 0xBA},
	{DISPCTRL_WR_DATA, 0, 0x93},
	{DISPCTRL_WR_DATA, 0, 0xBD},
	{DISPCTRL_WR_DATA, 0, 0xC8},
	{DISPCTRL_WR_DATA, 0, 0xAF},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0xB0},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0xA2},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0xD1},
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T gamma_300CD_seq_M2[] = {
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_GAMMA_CTL, 0x0},
	{DISPCTRL_WR_DATA, 0, 0x02},
	{DISPCTRL_WR_DATA, 0, 0x18},
	{DISPCTRL_WR_DATA, 0, 0x08},
	{DISPCTRL_WR_DATA, 0, 0x24},
	{DISPCTRL_WR_DATA, 0, 0x3A},
	{DISPCTRL_WR_DATA, 0, 0x48},
	{DISPCTRL_WR_DATA, 0, 0x16},
	{DISPCTRL_WR_DATA, 0, 0xB0},
	{DISPCTRL_WR_DATA, 0, 0xB7},
	{DISPCTRL_WR_DATA, 0, 0xA4},
	{DISPCTRL_WR_DATA, 0, 0xAA},
	{DISPCTRL_WR_DATA, 0, 0xB3},
	{DISPCTRL_WR_DATA, 0, 0x9E},
	{DISPCTRL_WR_DATA, 0, 0xC1},
	{DISPCTRL_WR_DATA, 0, 0xC3},
	{DISPCTRL_WR_DATA, 0, 0xB5},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0xB1},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0xAE},
	{DISPCTRL_WR_DATA, 0, 0x00},
	{DISPCTRL_WR_DATA, 0, 0xF3},
	{DISPCTRL_LIST_END, 0, 0},		
};


DISPCTRL_REC_T elvss_16_seq[] =
{
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_TEMP_SWIRE, 0x0}, //Smart Dynamic ELVSS Set
	{DISPCTRL_WR_DATA, 0, 0x16},
	{DISPCTRL_WR_DATA, 0, 0x16},
	{DISPCTRL_WR_DATA, 0, 0x16},
	{DISPCTRL_WR_DATA, 0, 0x16},
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T elvss_on_seq[] =
{	
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_ELVSS_CON, 0x0},
	{DISPCTRL_WR_DATA, 0, 0x0B}, // 0A - OFF; 0B - ON
	{DISPCTRL_LIST_END, 0, 0},
};

DISPCTRL_REC_T gamma_update_seq[] =
{	
	{DISPCTRL_WR_CMND, S6E63M0X_CMD_GAMMA_CTL, 0x0},
	{DISPCTRL_WR_DATA, 0, 0x03},
	{DISPCTRL_LIST_END, 0, 0},
};

#endif /* __BCM_LCD_S6E63M0X_H */

